#+OPTIONS: toc:nil
#+TITLE: ⭐ HPI (Human Programming Interface)
#+logseq_title: hpi

#+filetags: :hpi:
The repository: [[https://github.com/karlicoss/HPI][karlicoss/HPI]] and [[https://beepb00p.xyz/hpi.html][blog post]].

This is a sort of todo-list with raw ideas and things not (yet?) worthy of github issues.


#+toc: headlines 2

* [#A] * similar projects & efforts
:PROPERTIES:
:ID:       smlrprjctsffrts
:END:
** TODO [#B] [2020-01-17] [[https://masterscrat.github.io/Chatistics][Chatistics |  Python scripts to parse your Messenger, Hangouts, WhatsApp and Telegram chat logs into DataFrames]]
:PROPERTIES:
:ID:       smstrscrtgthbchtstcschtsttsppndtlgrmchtlgsntdtfrms
:END:
pretty nice format; perhaps I should do that?
** TODO [#B] [2020-03-21] [[https://github.com/KrauseFx/FxLifeSheet][KrauseFx/FxLifeSheet: Tracking the key metrics of my life]] :qs:
:PROPERTIES:
:ID:       sgthbcmkrsfxfxlfshtkrsfxflfshttrckngthkymtrcsfmylf
:END:
wow, that looks quite elaborate and cool!
** STRT [#C] [2019-12-11] [[https://en.wikipedia.org/wiki/Solid_(web_decentralization_project)][Solid (web decentralization project) - Wikipedia]] :solid:
:PROPERTIES:
:ID:       snwkpdrgwksldwbdcntrlztnpctsldwbdcntrlztnprjctwkpd
:END:
: Solid (Social Linked Data)[1] is a web decentralization project led by Tim Berners-Lee, the inventor of the World Wide Web, developed collaboratively at the Massachusetts Institute of Technology (MIT). The project "aims to radically change the way Web applications work today, resulting in true data ownership as well as improved privacy"[2] by developing a platform for linked-data applications that are completely decentralized and fully under users' control rather than controlled by other entities. The ultimate goal of Solid is to allow users to have full control of their own data, including access control and storage location. To that end, Tim Berners-Lee formed a company called Inrupt to help build a commercial ecosystem to fuel Solid.
*** [2020-01-15] eh.. instructions are a bit mental even for technical users... https://solidproject.org/for-developers/pod-server
:PROPERTIES:
:ID:       hnstrctnsrbtmntlvnfrtchncssldprjctrgfrdvlprspdsrvr
:END:
*** [2020-01-16] https://solidproject.org/use-solid/apps apps are a bit disorganised and lots of duplicates
:PROPERTIES:
:ID:       ssldprjctrgssldppsppsrbtdsrgnsdndltsfdplcts
:END:
*** [2020-01-17] Is it possible to use Solid offline (at least partially)?
:PROPERTIES:
:ID:       stpssbltssldfflntlstprtlly
:END:
: Yes, the Solid long term vision includes local first and a flexibility of different topologies of patch-passing sync networks. However, there are no implementations yet.

*** [2020-01-16] https://karlicoss.inrupt.net trying out pod
:PROPERTIES:
:ID:       skrlcssnrptnttryngtpd
:END:
apps are mostly very simplistic. Calendar/notepad/etc.
**** [2020-01-17] https://vincenttunru.gitlab.io/poddit eh, odd. saves bookmarks as xml, really?...
:PROPERTIES:
:ID:       svncnttnrgtlbpddthddsvsbkmrkssxmlrlly
:END:
**** [2020-01-17] tiddlywiki thing -- didn't work
:PROPERTIES:
:ID:       tddlywkthngddntwrk
:END:
**** [2020-01-17] I guess main question is -- how do they interact with each other
:PROPERTIES:
:ID:       gssmnqstnshwdthyntrctwthchthr
:END:
*** [2020-01-17] When it comes to malicious cyber attacks, an attack on a single source of many people’s data is generally more likely than on an individual level.
:PROPERTIES:
:ID:       whntcmstmlcscybrttcksnttcgnrllymrlklythnnnndvdllvl
:END:
good point
*** [2020-01-17] overall, it feels a bit raw and I don't see how it can assist existing infrastructure we have
:PROPERTIES:
:ID:       vrlltflsbtrwnddntshwtcnssstxstngnfrstrctrwhv
:END:
*** [#C] [2020-01-17] I guess add this to HPI?
:PROPERTIES:
:ID:       gssddthsthp
:END:
Or maybe even separate post, e.g. my experience with solid/camlistore/etc?
** TODO [#C] [2019-12-18] [[https://github.com/ErikBjare/chatalysis][ErikBjare/chatalysis: Analyse (group)chat messages]]
:PROPERTIES:
:ID:       sgthbcmrkbjrchtlyssrkbjrchtlyssnlysgrpchtmssgs
:END:
: Currently supports: Facebook Messenger. Planned: Slack, WhatsApp, Telegram, Signal, Wire

** [#C] [2020-05-08] [[https://jackreid.xyz/post/how-this-site-works/][How this site works | Jack Reid]] :hpi:
:PROPERTIES:
:ID:       sjckrdxyzpsthwthsstwrkshwthsstwrksjckrd
:END:
*** [2021-03-21] example of personal HTTP api -- should be possible to do similar via HPI_API
:PROPERTIES:
:ID:       xmplfprsnlpshldbpssbltdsmlrvhpp
:END:
** [#C] [2020-05-18] [[https://benjamincongdon.me/blog/2020/05/17/Quarantine-Notes-Week-10/][Quarantine Notes - Week 10 | Ben Congdon]]
:PROPERTIES:
:ID:       sbnjmncngdnmblgqrntnntswkqrntnntswkbncngdn
:END:
: This probably warrants its own post, but I strongly agree with the philosophy of Dogsheep: everything lives in a SQLite database (that you own!), each exporter tool is its own separate CLI, and Datasette is an extremely flexible tool to explore data. The Dogsheep ecosystem is totally self-hosted (you own your data) and free (as in beer), unlike personal data aggregator platforms like Exist.io and Gyroscope.
** TODO [#C] [2021-02-28] [[https://github.com/qnzl-archivist][Archivers]] :hpi:
:PROPERTIES:
:ID:       sgthbcmqnzlrchvstrchvrs
:END:
*** [2021-02-28] [[https://archivist.qnzl.co/][Archivist - Prevent your content from disappearing]]
:PROPERTIES:
:ID:       srchvstqnzlcrchvstprvntyrcntntfrmdspprng
:END:
*** [2021-02-28] [[https://github.com/qnzl-archivist/archivist][qnzl-archivist/archivist]]
:PROPERTIES:
:ID:       sgthbcmqnzlrchvstrchvstqnzlrchvstrchvst
:END:

** STRT [#B] [2021-03-19] [[https://lifescope.io/][LifeScope]] :qs:dashboard:hpi:
:PROPERTIES:
:ID:       slfscplfscp
:END:
https://github.com/LifeScopeLabs
*** [2021-04-12] https://lifescope.io/getting-started
:PROPERTIES:
:ID:       slfscpgttngstrtd
:END:
ok, so not exactly clear what are they doing, but definitely worth checking out
seems centralized and talking via APIs?
*** TODO [2021-04-12] https://vimeo.com/519676585                   :towatch:
:PROPERTIES:
:ID:       svmcm
:END:
*** [2021-04-12] I mean, looks cool https://lifescope.io/beta , would be good to chat with them
:PROPERTIES:
:ID:       mnlksclslfscpbtwldbgdtchtwththm
:END:

** TODO [#B] need to outreach solid etc                          :social:hpi:
:PROPERTIES:
:CREATED:  [2021-04-12]
:ID:       ndttrchsldtc
:END:
* [#A] * 3rd party integrations
:PROPERTIES:
:ID:       rdprtyntgrtns
:END:
** TODO [#A] [2020-05-14] could caption "HPI meets X"                :toblog:
:PROPERTIES:
:ID:       cldcptnhpmtsx
:END:

** TODO [#A] [2021-02-04] [[https://news.ycombinator.com/item?id=26018187][Apache Arrow 3.0 | Hacker News]] :hpi:
:PROPERTIES:
:ID:       snwsycmbntrcmtmdpchrrwhckrnws
:END:
: Not only in between processes, but also in between languages in a single process. In this POC I spun up a Python interpreter in a Go process and pass the Arrow data buffer between processes in constant time. https://github.com/nickpoorman/go-py-arrow-bridge

hmm would be pretty cool if possible to use
** STRT [#B] [2020-03-18] [[https://github.com/ricklamers/gridstudio][ricklamers/gridstudio: Grid studio is a web-based application for data science with full integration of open source data science frameworks and languages]] :pandas:
:PROPERTIES:
:ID:       sgthbcmrcklmrsgrdstdrcklmpnsrcdtscncfrmwrksndlnggs
:END:
hmm, looks interesting, but it's all dockerized, so might be tricky to expose my data..
*** [2020-07-31] ugh, weird website with no infromation and only pricing..
:PROPERTIES:
:ID:       ghwrdwbstwthnnfrmtnndnlyprcng
:END:
*** [2020-11-01] hmm ok, soo tried out
:PROPERTIES:
:ID:       hmmkstrdt
:END:
: import sys
: # TODO ugh. it's a mess, and struggled to launch it as non-root...
: sys.path.insert(0, '/.local/lib/python3.7/site-packages/')
: sys.path.insert(0, '/.local/lib/python3.8/site-packages/')
: 
: import os
: os.environ['MY_CONFIG'] = '/root/.config/my'
: 
: import my.emfit as E
: df = E.dataframe()
: # NOTE had nan error?
: xxx = df[['date', 'avg_hr']].dropna()
: xxx['date'] = xxx['date'].astype(str)
: # NOTE: for some reason just xxx didn't work..
: sheet('A1', xxx['date'])
: sheet('B1', xxx['avg_hr'])


- I guess it could use nicer datatypes, e.g. dates etc. not sure if the cells are type aware though (they could 'remember' python type?)
  I guess ideally need to leverage libreoffice + publish to web??
- nice that can just use python functions
- I really don't wanna use their builtin editor... maybe best to rely on external files
- very nice that plots update automatically on data updates
- for data overlays could use a separate column

** TODO [#B] [2020-05-09] [[https://github.com/andrey-utkin/taskdb/wiki/Live-demo#workout-dashboard][Live demo · andrey-utkin/taskdb Wiki]]
:PROPERTIES:
:ID:       sgthbcmndrytkntskdbwklvdmtdshbrdlvdmndrytkntskdbwk
:END:
: it is pretty neat already for analysis with querying and visualization. But your stuff is orders of magnitude bigger. Possibly I will set up HPI for myself some day.
** TODO [#B] [2020-09-11] [[https://twitter.com/thingskatedid/status/1286559756967002113][Kate on Twitter: "I made a super simple CLI plotting thingy, reads numbers on stdin, draws svg to stdout. Just for seeing the shape of data. It's written in awk. https://t.co/TFYKbn2SKT" / Twitter]] :tui:
:PROPERTIES:
:ID:       stwttrcmthngsktddsttsktntwrttnnwkstctfykbnskttwttr
:END:
:  made a super simple CLI plotting thingy, reads numbers on stdin, draws svg to stdout
** TODO [#C] [2021-02-08] [[https://gitlab.com/bramw/baserow][Bram Wiepjes / baserow · GitLab]] :hpi:exobrain:
:PROPERTIES:
:ID:       sgtlbcmbrmwbsrwbrmwpjsbsrwgtlb
:END:
: Open source online database tool and Airtable alternative.
** TODO [#B] Hpi to anki interface?                                 :hpi:srs:
:PROPERTIES:
:CREATED:  [2021-02-23]
:ID:       hptnkntrfc
:END:
That way would be able to easily import and remember lots of tgings. Just need stable IDs..

** STRT [#B] def try redash, seems to be a 'free' interface??      :influxdb:
:PROPERTIES:
:CREATED:  [2021-02-12]
:ID:       dftryrdshsmstbfrntrfc
:END:
https://news.ycombinator.com/item?id=13597068
- https://news.ycombinator.com/item?id=23860281
  : I evaluated on-premise Redash as an alternative for engineers and analysts who don't want to learn tableau. It's harder to setup than Metabase but more intuitive to use (for someone with SQL expertise).
*** STRT [#B] [2020-05-06] [[https://github.com/KrauseFx/FxLifeSheet/issues/34][Find alternative to Google Data Studio · Issue #34 · KrauseFx/FxLifeSheet]] :spreadsheet:degoogle:
:PROPERTIES:
:ID:       sgthbcmkrsfxfxlfshtsssfndtvtggldtstdsskrsfxfxlfsht
:END:
: Have you considered Redash? It's open source, self hosted and pretty solid.

google docs-like interface
** TODO [#B] [2020-10-31] [[https://pyspread.gitlab.io/][Welcome to pyspread | pyspread]] :hpi:python:spreadsheets:
:PROPERTIES:
:ID:       spysprdgtlbwlcmtpysprdpysprd
:END:
: pyspread expects Python expressions in its grid cells, which makes a spreadsheet specific language obsolete. Each cell returns a Python object that can be accessed from other cells. These objects can represent anything including lists or matrices.
** TODO [#B] [2020-01-10] Repl.it - Feed  https://repl.it/talk/all?lang=python_turtle :project:promnesia:demo:
:PROPERTIES:
:ID:       99e5da60-0496-491e-a5f7-db990139acdd
:END:
: Repl from Repo
: Instantly run any GitHub repository.
** TODO [#B] [2020-10-16] [[https://forum.quantifiedself.com/t/need-your-insights-on-a-self-data-hub-ideation/8553/14][Need your insights on a “Self Data Hub” ideation - Quantified Self / Apps & Tools - Quantified Self Forum]]
:PROPERTIES:
:ID:       sfrmqntfdslfcmtndyrnsghtsqntfdslfppstlsqntfdslffrm
:END:
: hook it right into open humans
** TODO [#B] [2020-02-03] [[https://wiki.postgresql.org/wiki/Foreign_data_wrappers][Foreign data wrappers - PostgreSQL wiki]] :hpi:
:PROPERTIES:
:ID:       swkpstgrsqlrgwkfrgndtwrpprsfrgndtwrpprspstgrsqlwk
:END:
: Twitter
** STRT [#C] [[http expose and connect to observable?][https://observablehq.com/@karlicoss/hpi_meets_]] :observable:
:PROPERTIES:
:CREATED:  [2021-01-14]
:ID:       xpsndcnncttbsrvblsbsrvblhqcmkrlcsshpmts
:END:
** STRT [#C] trying out visidata                                   :visidata:
:PROPERTIES:
:CREATED:  [2020-07-31]
:ID:       tryngtvsdt
:END:
ok looks promising

tried https://www.visidata.org/docs/graph/ on bluemaestro

: from my.bluemaestro import dataframe
: df = dataframe()
: import visidata
: visidata.view_pandas(df.reset_index()[-1000:])


for all points, it was pretty slow... not sure why
** STRT [#C] demo: def need demonstration with Memacs...             :memacs:
:PROPERTIES:
:CREATED:  [2020-04-24]
:ID:       dmdfnddmnstrtnwthmmcs
:END:
** STRT [#C] [2019-12-20] Datasette — Datasette documentation tool for exploring data?
:PROPERTIES:
:ID:       dtsttdtsttdcmnttntlfrxplrngdt
:END:
: https://datasette.readthedocs.io/en/stable
: Datasette is a tool for exploring and publishing data. It helps people take data of any shape or size and publish that as an interactive, explorable website and accompanying API.
: Datasette is aimed at data journalists, museum curators, archivists, local governments and anyone else who has data that they wish to share with the world.
*** [2020-01-17] ok, so it's like a web UI for sqlite
:PROPERTIES:
:ID:       kstslkwbfrsqlt
:END:
**** [2020-09-21] wonder if could reuse it for padnas? def could convert pandas to sqlite and use it
:PROPERTIES:
:ID:       wndrfcldrstfrpdnsdfcldcnvrtpndstsqltndst
:END:
*** [2020-11-14] tried with photos https://news.ycombinator.com/item?id=25090218
:PROPERTIES:
:ID:       trdwthphtssnwsycmbntrcmtmd
:END:
** TODO [#C] demo: with QS ledger: should be easy it is to integrate :qs:toblog:
:PROPERTIES:
:CREATED:  [2019-11-14]
:ID:       dmwthqsldgrshldbsytstntgrt
:END:
e.g. https://github.com/markwk/qs_ledger/blob/master/instapaper/instapaper_data_analysis.ipynb
or lastfm ipynb?
** TODO [#C] [2021-01-01] [[https://www.sqlite.org/vtablist.html][List Of Virtual Tables]] :sqlite:
:PROPERTIES:
:ID:       swwwsqltrgvtblsthtmllstfvrtltbls
:END:
: A virtual table is an object that presents an SQL table interface but which is not stored in the database file, at least not directly. The virtual table mechanism is a feature of SQLite that allows SQLite to access and manipulate resources other than bits in the database file using the powerful SQL query language.
** TODO [#C] use gephi as frontend?
:PROPERTIES:
:CREATED:  [2020-12-02]
:ID:       sgphsfrntnd
:END:
** TODO [#C] [2020-12-14] [[https://nitter.net/simonw/status/1338265856699035648][Simon Willison (@simonw): "sqlite-utils 3.1 adds a new command: sqlite-utils analyze-tables my.db It queries every column of every table and outputs useful statistics about them: https://sqlite-utils.readthedocs.io/en/stable/changelog.html#v3-1" | nitter]] :hpi:
:PROPERTIES:
:ID:       snttrntsmnwsttssmnwllsnsmthdcsnstblchnglghtmlvnttr
:END:
: sqlite-utils 3.1 adds a new command:
:     sqlite-utils analyze-tables my.db
: It queries every column of every table and outputs useful statistics about them
** [#C] [2021-02-14] [[https://github.com/influxdata/influxdb-python][influxdata/influxdb-python: Python client for InfluxDB]] :influx:pandas:hpi:
:PROPERTIES:
:ID:       sgthbcmnflxdtnflxdbpythnnxdbpythnpythnclntfrnflxdb
:END:
: Additional dependencies are:
:     pandas: for writing from and reading to DataFrames (http://pandas.pydata.org/

hmm this is useful.. wonder if could benefit from it
** [#C] [2020-06-16] [[https://news.ycombinator.com/item?id=23539541][A Jupyter Kernel for SQLite]] :hpi:
:PROPERTIES:
:ID:       snwsycmbntrcmtmdjpytrkrnlfrsqlt
:END:
https://blog.jupyter.org/a-jupyter-kernel-for-sqlite-9549c5dcf551
*** [2020-12-05] hmm, kinda nice, but not sure if it's better than sqlitebrowser when used locally
:PROPERTIES:
:ID:       hmmkndncbtntsrftsbttrthnsqltbrwsrwhnsdlclly
:END:
** TODO [#C] grafana is good for gaps in data?                  :grafana:hpi:
:PROPERTIES:
:CREATED:  [2021-02-09]
:ID:       grfnsgdfrgpsndt
:END:
** TODO [#C] [2020-05-08] [[https://github.com/heedy/heedy][heedy/heedy: An Open-Source Platform for Quantified Self & IoT]] :qs:
:PROPERTIES:
:ID:       sgthbcmhdyhdyhdyhdynpnsrcpltfrmfrqntfdslft
:END:

** TODO [#C] Make simplified data projections, so plots can be generated in couple of pandas commands :toblog:dashboard:
:PROPERTIES:
:CREATED:  [2019-12-25]
:ID:       mksmplfddtprjctnsspltscnbgnrtdncplfpndscmmnds
:END:
** TODO [#C] [2021-02-11] [[https://blog.repl.it/alwayson][Repl.it - Hosting Apps with Always On]] :hpi:promnesia:computing:
:PROPERTIES:
:ID:       sblgrpltlwysnrplthstngppswthlwysn
:END:
: As a reminder, Replit gives you most of what you need to rapidly build and ship apps in the cloud -- at lightning speed:
:     A blazing fast online IDE
:     Automatic Package Management
:     Automatic hosting
:     Automatic SSL/HTTPS
:     Domain linking
:     A simple and fast Database for persistence
:     A secure way to store secrets
** TODO [#C] [2020-10-15] [[https://github.com/wger-project/wger][wger-project/wger: Self hosted FLOSS fitness/workout and weight tracker written with Django]] :exercise:
:PROPERTIES:
:ID:       sgthbcmwgrprjctwgrwgrprjcktndwghttrckrwrttnwthdjng
:END:
integrate with it?
** TODO [#C] HPI should be able to generate blueprints for grafana; maybe even send to the API? :hpi:grafana:
:PROPERTIES:
:CREATED:  [2021-02-13]
:ID:       hpshldbbltgnrtblprntsfrgrfnmybvnsndtthp
:END:
e.g. depending on the 'aspects' the data provider has, would be different plots/dashboards
** TODO [#C] maybe load all to postgres? would also work nice with #cachew .... :hpi:grafana:
:PROPERTIES:
:CREATED:  [2021-02-12]
:ID:       mybldlltpstgrswldlswrkncwthcchw
:END:
** TODO [#C] ok, guess I need to figure out a nice interface to connect to grafana? :grafana:hpi:
:PROPERTIES:
:CREATED:  [2021-02-12]
:ID:       kgssndtfgrtncntrfctcnncttgrfn
:END:
** TODO [#C] upload stats; with coverage?                     :emfit:grafana:
:PROPERTIES:
:CREATED:  [2021-02-18]
:ID:       pldsttswthcvrg
:END:
** TODO [#B] [2020-01-29] [[https://news.ycombinator.com/item?id=22181437][Typesense: Open-Source Alternative to Algolia]] :hpi:search:
:PROPERTIES:
:ID:       snwsycmbntrcmtmdtypsnspnsrcltrntvtlgl
:END:
https://github.com/typesense/typesense
** TODO [#B] [2021-03-05] [[https://twitter.com/simonw][Simon Willison (@simonw) / Twitter]] :hpi:
:PROPERTIES:
:ID:       stwttrcmsmnwsmnwllsnsmnwtwttr
:END:
finally need to cooperate with datasette...
* [#A] * documentation & user friendliness improvements
:PROPERTIES:
:CREATED:  [2020-05-18]
:ID:       dcmnttnsrfrndlnssmprvmnts
:END:
** STRT [#B] Add data arbitration example for twitter                :toblog:
:PROPERTIES:
:CREATED:  [2020-04-15]
:ID:       dddtrbtrtnxmplfrtwttr
:END:
*** TODO [2020-05-06] myinfra: takeout merging/synthetic export is also a good example
:PROPERTIES:
:ID:       mynfrtktmrgngsynthtcxprtslsgdxmpl
:END:
** STRT [#B] overlay/extension docs: document how to 'overlay' parts of it? with RSS or twitter as examples
:PROPERTIES:
:CREATED:  [2020-05-13]
:ID:       vrlyxtnsndcsdcmnthwtvrlyprtsftwthrssrtwttrsxmpls
:END:
e.g.
maybe it's more of a platform to build your own layers etc
akin to spacemacs/doom
*** STRT [#B] example of what you'd want to modify/hack in the module: localize datetimes
:PROPERTIES:
:CREATED:  [2020-10-08]
:ID:       xmplfwhtydwnttmdfyhcknthmdllclzdttms
:END:
*** STRT [#C] rename all.py to main.py ? although a little misleading as well
:PROPERTIES:
:CREATED:  [2020-10-05]
:ID:       rnmllpytmnpylthghlttlmsldngswll
:END:
*** STRT [#C] think about the guide to overriding sources?          :twitter:
:PROPERTIES:
:CREATED:  [2020-05-22]
:ID:       thnkbtthgdtvrrdngsrcs
:END:
I guess ideally, the user could explicitly set export_dir = None for such source and it would be defensive? dunno.
*** STRT [#C] [2020-09-20] [[https://packaging.python.org/guides/creating-and-discovering-plugins/#using-namespace-packages][Creating and discovering plugins — Python Packaging User Guide]]
:PROPERTIES:
:ID:       spckgngpythnrggdscrtngnddcvrngplgnspythnpckgngsrgd
:END:
maybe doctor (or 'modules') could list that? with paths (e.g. so default/third party are easily distinguished apart)
*** [#D] [2020-09-20] [[https://packaging.python.org/guides/creating-and-discovering-plugins/][Creating and discovering plugins — Python Packaging User Guide]]
:PROPERTIES:
:ID:       spckgngpythnrggdscrtngnddcvrngplgnspythnpckgngsrgd
:END:

** STRT [#B] specify export formats in docstrings and autogenerate?
:PROPERTIES:
:CREATED:  [2020-01-07]
:ID:       spcfyxprtfrmtsndcstrngsndtgnrt
:END:
** TODO [#B] doctor diaginfo command?
:PROPERTIES:
:CREATED:  [2020-12-07]
:ID:       dctrdgnfcmmnd
:END:
dump if install is editable or not
os/python version?
** TODO [#B] config: improve config helper to warn about the attributes?
:PROPERTIES:
:CREATED:  [2020-05-10]
:ID:       cnfgmprvcnfghlprtwrnbtthttrbts
:END:
:     return previsits_to_history(*args, **kwargs, src='whatever')[0] # TODO meh
: src/promnesia/common.py:333: in previsits_to_history
:     previsits = list(extr()) # TODO DEFENSIVE HERE!!!
: src/promnesia/sources/takeout.py:105: in index
:     from my.google.takeout.paths import get_takeouts
:     from dataclasses import dataclass
:     from ...core.common import Paths
: 
:     from my.config import google as user_config
:     @dataclass
: >   class google(user_config):
:         '''
:         Expects [[https://takeout.google.com][Google Takeout]] data.
: E       TypeError: no positional arguments expected
** TODO [#B] doc: core primitive: ~get_files~
:PROPERTIES:
:CREATED:  [2021-02-13]
:ID:       dccrprmtvgtfls
:END:
can handle all sorts of things
** TODO [#B] [2021-02-26] [[https://twitter.com/karlicoss/status/1365431101917978624][karlicoss (ex. jestem króliczkiem) on Twitter: "@nikitavoloboev I guess if I decide on some opinionated defaults it could just be a single container/VM (maybe you'd need to specify the path to data on disk and that's it). After that maybe people can decide whether they are happy with the defaults or are willing to tweak." / Twitter]] :hpi:dashboard:promnesia:
:PROPERTIES:
:ID:       stwttrcmkrlcsssttskrlcssxththdfltsrrwllngttwktwttr
:END:
** STRT [#B] readme: keep list of packages other people forked? suggest to send me links
:PROPERTIES:
:CREATED:  [2020-01-19]
:ID:       rdmkplstfpckgsthrpplfrkdsggsttsndmlnks
:END:
*** [#A] [2020-08-26] readme: [[https://github.com/seanbreckenridge/HPI#modified-from-karlicosshpi-to-more-fit-my-life][seanbreckenridge/HPI: Human Programming Interface]]
:PROPERTIES:
:ID:       rdmsgthbcmsnbrcknrdghpmdfrcknrdghphmnprgrmmngntrfc
:END:
: Modified from karlicoss/HPI to more fit my life

** TODO [#B] [2020-11-10] [[https://github.com/karlicoss/promnesia/issues/125][User workflow documentation / understanding how components fit together · Issue 125 · karlicoss/promnesia]]
:PROPERTIES:
:ID:       sgthbcmkrlcssprmnsssssrwrpnntsfttgthrsskrlcssprmns
:END:
** STRT [#C] list supported providers in readme
:PROPERTIES:
:CREATED:  [2020-01-16]
:ID:       lstspprtdprvdrsnrdm
:END:
** STRT [#C] Add check methods to each provider, expose in doctor
:PROPERTIES:
:CREATED:  [2020-05-18]
:ID:       ddchckmthdstchprvdrxpsndctr
:END:
*** TODO [2020-09-28] would be nice to add a meta-warning about missing stats method??
:PROPERTIES:
:ID:       wldbnctddmtwrnngbtmssngsttsmthd
:END:
** STRT [#C] [2020-05-18] [[https://github.com/karlicoss/HPI/blob/master/doc/SETUP.org#setting-up-the-modules][HPI/SETUP.org at master · karlicoss/HPI]]
:PROPERTIES:
:ID:       sgthbcmkrlcsshpblbmstrdcshmdlshpstprgtmstrkrlcsshp
:END:
: ~/.config/my/my/config.py

eh. not sure about this section...
can't have config/repos dir and config.py at the same time
** STRT [#C] [2020-05-08] intake.github.io/status https://intake.github.io/status :inspiration:
:PROPERTIES:
:ID:       ntkgthbsttssntkgthbstts
:END:
*** [#B] [2020-05-08] intake/README.md at master · intake/intake · GitHub
:PROPERTIES:
:ID:       ntkrdmmdtmstrntkntkgthb
:END:
https://github.com/intake/intake/blob/master/README.md
: Intake: A general interface for loading data
: Intake [0] is another package that might help here. It organizes a set of data sources into
: (1) plugins that actually connect to the data source and map the data to standard Python data structures like Data Frames
: (2) catalogs that reference the plugins you want to use alongside project specific metadata like usernames/passwords/source URIs
: (3) convenience functions that persistence, concatenation, etc
: (4) a GUI for browsing data sources
*** [2020-05-12] ugh. struggled with installing gui https://intake.readthedocs.io/en/latest/gui.html
:PROPERTIES:
:ID:       ghstrggldwthnstllnggsntkrdthdcsnltstghtml
:END:
*** [2020-05-12] anyways, I suppose it's more
:PROPERTIES:
:ID:       nywyssppstsmr
:END:
** TODO [#C] doc: I guess google takeout would be a good demonstration
:PROPERTIES:
:CREATED:  [2020-05-04]
:ID:       dcgssggltktwldbgddmnstrtn
:END:
** TODO [#C] mention that using ~make_config~ isn't even necessary if you're not using default attributes
:PROPERTIES:
:CREATED:  [2020-05-10]
:ID:       mntnthtsngmkcnfgsntvnncssryfyrntsngdfltttrbts
:END:
also default attributes are pretty important because of caching, error handling policies, etc
*** [2020-05-10] ah shit, not quite true. works in runtime, but mypy complains...
:PROPERTIES:
:ID:       hshtntqttrwrksnrntmbtmypycmplns
:END:
** TODO [#C] doc: giude with pyenv if they don't want to mess up their main environment, use docker :hpi:
:PROPERTIES:
:CREATED:  [2020-09-29]
:ID:       dcgdwthpynvfthydntwnttmsspthrmnnvrnmntsdckr
:END:
** TODO [#C] add a doctor shortcut for profiling?
:PROPERTIES:
:CREATED:  [2020-11-02]
:ID:       dddctrshrtctfrprflng
:END:
** TODO [#C] avoid ~make_config~ as far as possible, and just use properties directly instead?? it's only necessary for truly complicated hackery
:PROPERTIES:
:CREATED:  [2020-12-13]
:ID:       vdmkcnfgsfrspssblndjstspryncssryfrtrlycmplctdhckry
:END:
** TODO [#C] doc: when I add strict mode, suggest HPI_STRICT=true in troubleshooting guide? :hpi:
:PROPERTIES:
:CREATED:  [2021-02-19]
:ID:       dcwhnddstrctmdsggsthpstrcttrntrblshtnggd
:END:
** TODO [#C] update doc about using ~hpi install [--user] my.modulename~ :hpi:
:PROPERTIES:
:CREATED:  [2021-02-18]
:ID:       pdtdcbtsnghpnstllsrmymdlnm
:END:
** TODO [#C] eh, doctor doesn't give meaningful res when running in /data/hpi??
:PROPERTIES:
:CREATED:  [2020-05-27]
:ID:       hdctrdsntgvmnngflrswhnrnnngndthp
:END:
: my/core/init.py:40: UserWarning: 'my.config' package isn't found! (expected at /home/karlicos/.config/my). This is likely to result in issues.
: See https://github.com/karlicoss/HPI/blob/master/doc/SETUP.org#setting-up-the-modules for more info.
:   """.strip())
: ✅ config file: my/config/__init__.py
: ❌ mypy check: failed
:    Can't find package 'my.config'
** TODO [#C] [2019-12-24] inspiration: hugginn credentials inspiration:
:PROPERTIES:
:ID:       nsprtnhggnncrdntlsnsprtn
:END:
http://localhost:3000/user_credentials
: Your Credentials
: Credentials are used to store values used by many Agents. Examples might include "twitter_consumer_secret", "user_full_name", or "user_birthday".

that's quite nice; would be cool to display credentials for my kron thing?
** TODO [#D] doc: Hmm i wonder if egg links can be used on systems without symlinks? :pip:python:
:PROPERTIES:
:CREATED:  [2020-04-14]
:ID:       dchmmwndrfgglnkscnbsdnsystmswthtsymlnks
:END:
* [#A] * patterns for writing concise and safe modules
:PROPERTIES:
:ID:       pttrnsfrwrtngcncsndsfmdls
:END:
** TODO [#B] design: dateclasses -- mutable vs immutable                :hpi:
:PROPERTIES:
:CREATED:  [2021-02-13]
:ID:       dsgndtclsssmtblvsmmtbl
:END:
- generally prefer mutable? errors would be rare, no one expects modifying data to do anything meaningful -- and if they do, they really want it?
- better to make immutable via Final (so it's possible to check statically, but have an escape hatch if necessary)
** STRT [#B] check for dataframe 'error' column               :errors:pandas:
:PROPERTIES:
:CREATED:  [2020-09-15]
:ID:       chckfrdtfrmrrrclmn
:END:
*** [2020-10-31] or maybe make the dashboard more robust towards it? not sure..
:PROPERTIES:
:ID:       rmybmkthdshbrdmrrbsttwrdstntsr
:END:
** STRT [#C] functions with default inputs= argument
:PROPERTIES:
:CREATED:  [2020-09-18]
:ID:       fnctnswthdfltnptsrgmnt
:END:
better not to use it:

- causes early inputs() calls
- propagating all the way down wrappers (dataframes/aggregate functions etc) is unrealistic anyway
- easy to override inputs() in tests, etc, sort of 'dependncy injection'

downsides:
- unclear how to cachew()???
  although could just have lazy inputs() key. not that bad.
*** [2020-10-13] handled in cachew?
:PROPERTIES:
:ID:       hndldncchw
:END:
** STRT [#C] keep date as the first attribute to make sorting easier
:PROPERTIES:
:CREATED:  [2020-05-11]
:ID:       kpdtsthfrstttrbttmksrtngsr
:END:
** STRT [#C] Could use properties for lazier paths
:PROPERTIES:
:CREATED:  [2020-04-27]
:ID:       cldsprprtsfrlzrpths
:END:

** STRT [#C] top level decorator to check that some data was emitted?
:PROPERTIES:
:CREATED:  [2020-05-24]
:ID:       tplvldcrtrtchckthtsmdtwsmttd
:END:
that could help for configuration mistakes
** STRT [#C] maybe have sensible fallbacks for configs? e.g. falling back to documents folder, builtin python packages/site dire/etc
:PROPERTIES:
:CREATED:  [2020-04-14]
:ID:       mybhvsnsblfllbcksfrcnfgsgsfldrbltnpythnpckgsstdrtc
:END:
** WAIT [#C] use venv instead of repos symlinks                         :hpi:
:PROPERTIES:
:CREATED:  [2020-07-26]
:ID:       svnvnstdfrpssymlnks
:END:
** TODO [#C] Could use protocols (with Literal types) for pandas dfs??? :pandas:mypy:
:PROPERTIES:
:CREATED:  [2020-10-19]
:ID:       cldsprtclswthltrltypsfrpndsdfs
:END:

** TODO [#C] pattern: avoid importing config early so modules can work without it? :hpi:
:PROPERTIES:
:CREATED:  [2021-02-21]
:ID:       pttrnvdmprtngcnfgrlysmdlscnwrkwthtt
:END:

Add an example, maybe with dynamic my.config module

** STRT [#D] hmm. could just use ripgreppy parsing for processing htmls?? :promnesia:
:PROPERTIES:
:CREATED:  [2020-04-23]
:ID:       hmmcldjstsrpgrppyprsngfrprcssnghtmls
:END:
** [#D] [2020-05-16] [[https://macropy3.readthedocs.io/en/latest/lazy.html#lazy][Lazy — MacroPy3 1.1.0 documentation]] :python:
:PROPERTIES:
:ID:       smcrpyrdthdcsnltstlzyhtmllzylzymcrpydcmnttn
:END:
hmmm... nice
maybe could try it dith defensive behaviour...
** TODO [#D] avoid fromtimestamp?                                    :python:
:PROPERTIES:
:CREATED:  [2020-05-03]
:ID:       vdfrmtmstmp
:END:
*** [2020-09-28] eh? why? as long as the timezone is passed it's fine? maybe have a custom lint for that
:PROPERTIES:
:ID:       hwhyslngsthtmznspssdtsfnmybhvcstmlntfrtht
:END:
** [#D] [2020-05-03] reddit: zstd vs lz4 comparison      :reddit:exports:hpi:
:PROPERTIES:
:ID:       rddtzstdvslzcmprsn
:END:
about 3803 files
:   du -ch *.xz | tail -n 1
: 2.1G	total
:   du -ch *.zstd | tail -n1
: 2.9G	total

** [#D] [2020-05-03] comparison of zstd vs lz4                   :reddit:hpi:
:PROPERTIES:
:ID:       cmprsnfzstdvslz
:END:
(every tenth file, cache disabled)
: lz4 : ./test  31.20s user 2.58s system 101% cpu 33.285 total
: zstd: ./test  21.37s user 2.52s system 103% cpu 23.007 total

I mean, 1.5x is kinda nice...
** TODO [#D] wonder if can make Ipython force the iterators?         :python:
:PROPERTIES:
:CREATED:  [2020-04-24]
:ID:       wndrfcnmkpythnfrcthtrtrs
:END:
** [#B] [2021-03-15] config: extending base config which has Paths/Pathish and List as the default attribute :hpi:
:PROPERTIES:
:ID:       cnfgxtndngbscnfgwhchhspthspthshndlststhdfltttrbt
:END:
e.g. in mycfg
: class commits:
:    roots: Sequence[PathIsh] = [L]


in my.commits
: @dataclass
: class commits_cfg(user_config):
:     roots: Sequence[PathIsh] # --- this complains    ValueError: mutable default <class 'list'> for field roots is not allowed: use default_factory. shit
:     emails: Optional[Sequence[str]] = None
:     names: Optional[Sequence[str]] = None

huh, so adding  ~roots equals field(default_factory=list)~ solved it?...
** TODO [#B] handles archived stuff via CPath helper                    :hpi:
:PROPERTIES:
:CREATED:  [2021-03-26]
:ID:       hndlsrchvdstffvcpthhlpr
:END:
requires a bit of cooperation by using isinstance check in DAL? ... maybe inputs should take str, dunno
* [#B] * data providers/sources
:PROPERTIES:
:ID:       dtprvdrssrcs
:END:
** TODO [#A] the fuck??? after about 16019960000803 the timestamps for individual measurements basically stopped updating?? :hpi:bluemaestro:
:PROPERTIES:
:CREATED:  [2021-02-14]
:ID:       thfckftrbtthtmstmpsfrndvdlmsrmntsbscllystppdpdtng
:END:
wtf?????
** STRT [#C] rescuetime: figure out utc or not
:PROPERTIES:
:CREATED:  [2019-11-27]
:ID:       rsctmfgrttcrnt
:END:
*** STRT [#C] [2020-07-31] mm, ok, so it's a bit unclear, but https://www.rescuetime.com/apidoc#analytic-api-reference mentions stuff like "defined by the user’s selected time zone"?
:PROPERTIES:
:ID:       mmkstsbtnclrbtswwwrsctmcmtfflkdfndbythsrsslctdtmzn
:END:
so I guess it would mostly be London for me? And I guess I'd need to return dataclasses, 'thaw' them and patch up the timezone? ugh.
** STRT [#B] podcast addict
:PROPERTIES:
:CREATED:  [2020-12-08]
:ID:       pdcstddct
:END:
has 'playbackDate' in episodes table
seems that only podcastAddict.db is useful, the rest is just crap
*** [2020-12-08] need to merge databases, I lost state at some point?
:PROPERTIES:
:ID:       ndtmrgdtbsslststttsmpnt
:END:
** STRT [#B] [[https://github.com/karlicoss/HPI/pull/96#issuecomment-719826514][gpslogger?]]
:PROPERTIES:
:CREATED:  [2020-04-04]
:ID:       sgthbcmkrlcsshppllsscmmntgpslggr
:END:
** TODO [#B] [2019-09-17] [[https://github.com/jlumpe/pyorg][jlumpe/pyorg: Python library for working with Emacs org mode.]] :org:
:PROPERTIES:
:ID:       sgthbcmjlmppyrgjlmppyrgpythnlbrryfrwrkngwthmcsrgmd
:END:
: >>> org.orgdir  # Obtained automatically from org-directory variable in Emacs
: OrgDir('/home/jlumpe/org/')

huh that's quite mad!
*** [2020-09-11] could add it as an issue? maybe someone would be interested..
:PROPERTIES:
:ID:       cldddtsnssmybsmnwldbntrstd
:END:
** TODO [#B] define reasonable ranges for exercises so I could detect errors.. :wledger:
:PROPERTIES:
:CREATED:  [2019-03-29]
:ID:       dfnrsnblrngsfrxrcsssclddtctrrrs
:END:

** [#C] [2020-10-05] [[https://github.com/seanbreckenridge/ipgeocache][seanbreckenridge/ipgeocache: A small cache layer for IP geolocation info]]
:PROPERTIES:
:ID:       sgthbcmsnbrcknrdgpgcchsnbpgcchsmllcchlyrfrpglctnnf
:END:
** TODO [#C] commits -- need to cachew?                              :cachew:
:PROPERTIES:
:CREATED:  [2020-10-12]
:ID:       cmmtsndtcchw
:END:
** TODO [#C] reddit: maybe get rid of 'unfavorited'?...              :reddit:
:PROPERTIES:
:CREATED:  [2020-07-28]
:ID:       rddtmybgtrdfnfvrtd
:END:
** TODO [#C] [2020-05-21] [[https://github.com/ping/instagram_private_api][=ping/instagram_private_api=: A Python library to access Instagram's private API.]]
:PROPERTIES:
:ID:       sgthbcmpngnstgrmprvtppngnthnlbrrytccssnstgrmsprvtp
:END:
** TODO [#C] some ijson warnings                                   :location:
:PROPERTIES:
:CREATED:  [2020-05-10]
:ID:       smjsnwrnngs
:END:
: tests/takeout.py::test_location_perf
:   /home/karlicos/.local/lib/python3.7/site-packages/ijson/compat.py:47: DeprecationWarning:
:   ijson works by reading bytes, but a string reader has been given instead. This
:   probably, but not necessarily, means a file-like object has been opened in text
:   mode ('t') rather than binary mode ('b').
:     warnings.warn(_str_vs_bytes_warning, DeprecationWarning)
** STRT [#C] Hmm maybe filter reddit and only include every 10th or something to speed it up? :hpi_patterns:reddit:
:PROPERTIES:
:CREATED:  [2020-04-13]
:ID:       hmmmybfltrrddtndnlyncldvrythrsmthngtspdtp
:END:
** TODO [#C] check frequencies??                                :bluemaestro:
:PROPERTIES:
:CREATED:  [2020-07-11]
:ID:       chckfrqncs
:END:
** TODO [#C] timezone provider issues                              :location:
:PROPERTIES:
:CREATED:  [2019-07-24]
:ID:       tmznprvdrsss
:END:
huh, that's random
: datetime.datetime(2012, 5, 8, 17, 37, 28, 181000, tzinfo=<DstTzInfo 'Europe/Moscow' MSK+4:00:00 STD>),
:   'Europe/Moscow'),
:  (datetime.datetime(2012, 5, 8, 20, 46, 27, 16000, tzinfo=<DstTzInfo 'Asia/Novosibirsk' +07+7:00:00 STD>),
:   'Asia/Novosibirsk'),
:  (datetime.datetime(2012, 5, 8, 20, 50, 3, 274000, tzinfo=<DstTzInfo 'Asia/Novosibirsk' +07+7:00:00 STD>),
:   'Asia/Novosibirsk'),
*** TODO [2019-07-24] what's up with LMT+2:30:00 STD?
:PROPERTIES:
:ID:       whtspwthlmtstd
:END:
** TODO [#C] twitter archive trims the retweets (TODO put in the documentation?) :twitter:
:PROPERTIES:
:CREATED:  [2020-04-29]
:ID:       twttrrchvtrmsthrtwtstdptnthdcmnttn
:END:
** TODO [#C] [2020-10-15] [[https://github.com/wger-project/wger/blob/c70150b4850f2c7ab2fdc7a953c3c11f84d31e8c/wger/exercises/fixtures/exercises.json][wger/exercises.json at c70150b4850f2c7ab2fdc7a953c3c11f84d31e8c · wger-project/wger]] :exercise:
:PROPERTIES:
:ID:       sgthbcmwgrprjctwgrblbcbfctcbfcbfdcccfdcwgrprjctwgr
:END:
: "creation_date": null,
:  "category": 12,
:  "uuid": "7ce6b090-5099-4cd0-83ae-1a02725c868b",
:  "muscles": [
:      12
:  ],
:  "license": 1,
:  "name": "Pull-ups"

ok, nice it already has muscles involved.. I could use this data
*** [2020-10-17] could reuse the same exercise names as wger uses?
:PROPERTIES:
:ID:       cldrsthsmxrcsnmsswgrss
:END:
** TODO [#C] stackexchange gdpr has ip addresses
:PROPERTIES:
:CREATED:  [2020-12-04]
:ID:       stckxchnggdprhspddrsss
:END:
** TODO [#C] location provider: foursquare/swarm
:PROPERTIES:
:CREATED:  [2020-10-18]
:ID:       lctnprvdrfrsqrswrm
:END:
** TODO [#C] twint doesn't get retweets                       :twint:twitter:
:PROPERTIES:
:CREATED:  [2020-06-04]
:ID:       twntdsntgtrtwts
:END:
https://github.com/twintproject/twint/issues/786

: twint -u karlicoss --retweets
** TODO [#C] need to switch all formats to json.. I guess it's still reasonable to have HTML parser because old takeouts didn't have it :takeout:
:PROPERTIES:
:CREATED:  [2019-05-19]
:ID:       ndtswtchllfrmtstjsngsstssvhtmlprsrbcsldtktsddnthvt
:END:
*** TODO [#B] [2019-09-10] that's also important before releasing :promnesia:
:PROPERTIES:
:ID:       thtslsmprtntbfrrlsng
:END:

** TODO [#C] [2021-02-04] [[https://github.com/seanbreckenridge/discord_data][seanbreckenridge/discord_data: Library to parse messages/activity from the discord data export]] :discord:hpi:
:PROPERTIES:
:ID:       sgthbcmsnbrcknrdgdscrddtsssgsctvtyfrmthdscrddtxprt
:END:

** TODO [#C] when searching for commits, make sure archived repos are present
:PROPERTIES:
:CREATED:  [2020-10-12]
:ID:       whnsrchngfrcmmtsmksrrchvdrpsrprsnt
:END:
** TODO [#C] [2021-02-27] [[https://news.ycombinator.com/upvoted?id=karlicoss][Upvoted submissions | Hacker News]] :hackernews:orger:hpi:
:PROPERTIES:
:ID:       snwsycmbntrcmpvtddkrlcsspvtdsbmssnshckrnws
:END:
** TODO [#C] [2020-10-14] [[https://github.com/seanbreckenridge/HPI/blob/4a0eb2d8e3ae963e315f0eaa7f538b46ef5513f5/my/skype.py][HPI/skype.py at 4a0eb2d8e3ae963e315f0eaa7f538b46ef5513f5 · seanbreckenridge/HPI]]
:PROPERTIES:
:ID:       sgthbcmsnbrcknrdghpblbbdfkyppytbdffbffsnbrcknrdghp
:END:
** TODO [#C] attempt to reverse geocache photos
:PROPERTIES:
:CREATED:  [2020-05-03]
:ID:       ttmpttrvrsgcchphts
:END:
ugh. most libraries are outdated...
https://github.com/thampiman/reverse-geocoder
some hackery...
:     import geopy
:     from geopy.geocoders import Nominatim
:     from geopy.extra.rate_limiter import RateLimiter
:     locator = Nominatim(user_agent="myGeocoder")
:     # getloc = RateLimiter(locator.reverse, min_delay_seconds=0.001)
:     #
:     from functools import lru_cache
: 
:     @lru_cache(None)
:     def query(p):
:         print("UNCACHED!! ", p)
:         return locator.reverse(p)
: 
:     def getloc(p):
:         lat, lon = p
:         lat = round(lat, ndigits=3)
:         lon = round(lon, ndigits=3)
:         return query((lat, lon))
** TODO [#D] old last.fm + spotify + bandcamp arbitration
:PROPERTIES:
:CREATED:  [2020-12-13]
:ID:       ldlstfmsptfybndcmprbtrtn
:END:
** TODO [#D] switch pinboard to HPI                               :promnesia:
:PROPERTIES:
:CREATED:  [2020-06-08]
:ID:       swtchpnbrdthp
:END:
** TODO [#D] hmm, keeping history of when I followed people on twitter could be useful.. :promnesia:hpi:
:PROPERTIES:
:CREATED:  [2020-07-09]
:ID:       hmmkpnghstryfwhnfllwdpplntwttrcldbsfl
:END:
** TODO [#D] how to make sure all providers are handled?         :taplog:hpi:
:PROPERTIES:
:CREATED:  [2020-10-12]
:ID:       hwtmksrllprvdrsrhndld
:END:
** TODO [#C] allow timestamp for likes? just make it optional and use in orger if possible :twitter:hpi:
:PROPERTIES:
:CREATED:  [2021-03-16]
:ID:       llwtmstmpfrlksjstmktptnlndsnrgrfpssbl
:END:
** TODO [#C] pdfs: would be interesting to filter by author? dunno it's often not set/empty... :hpi:
:PROPERTIES:
:CREATED:  [2021-04-01]
:ID:       pdfswldbntrstngtfltrbythrdnntsftnntstmpty
:END:
** TODO [#C] pdfs: maybe extract some meta to build index?              :hpi:
:PROPERTIES:
:CREATED:  [2021-04-03]
:ID:       pdfsmybxtrctsmmttbldndx
:END:
** [#B] [2021-04-05] [[https://github.com/piyueh/zoteroutils][piyueh/zoteroutils: Python API to interact with Zotero's local SQLite database.]] :zotero:HPI:
:PROPERTIES:
:ID:       sgthbcmpyhztrtlspyhztrtlsptntrctwthztrslclsqltdtbs
:END:

** TODO [#C] inactive windows are sort of useful too hmm          :hpi:arbtt:
:PROPERTIES:
:CREATED:  [2021-05-06]
:ID:       nctvwndwsrsrtfsflthmm
:END:
** TODO [#C] cache pdfs by file?                                 :hpi:cachew:
:PROPERTIES:
:CREATED:  [2021-05-07]
:ID:       cchpdfsbyfl
:END:
** TODO [#B] youtube playlists                                          :hpi:
:PROPERTIES:
:CREATED:  [2021-05-20]
:ID:       ytbplylsts
:END:
** TODO [#B] script to mirror 'liked' music                     :hpi:spotify:
:PROPERTIES:
:CREATED:  [2021-05-22]
:ID:       scrpttmrrrlkdmsc
:END:
one will be 'currently liked', another one is 'liked ever'?
so normally I'll use 'liked' playlist, but can safely delete stuff from it
* [#B] * improving testing & CI
:PROPERTIES:
:ID:       mprvngtstngc
:END:
** [#A] also see [[file:misc.org::#jdoe][J. Doe.]], a project aiming to create an artificial person/data narrative
:PROPERTIES:
:ID:       lssflmscrgjdjdprjctmngtcrtnrtfclprsndtnrrtv
:END:

** TODO [#B] could test against twitter database
:PROPERTIES:
:CREATED:  [2020-04-16]
:ID:       cldtstgnsttwttrdtbs
:END:
actually could even commit it to github...
use some really really public account?

** STRT [#B] perhaps, 'fake data' generators belong to DAL/HPI as well? that way easy to keep in sync :jdoe:
:PROPERTIES:
:CREATED:  [2020-08-23]
:ID:       prhpsfkdtgnrtrsblngtdlhpswllthtwysytkpnsync
:END:
** TODO [#C] sigh.. mimesis can't generate dates between two other, but works with json 'schemas' :jdoe:
:PROPERTIES:
:CREATED:  [2020-09-19]
:ID:       sghmmsscntgnrtdtsbtwntwthrbtwrkswthjsnschms
:END:
faker can do that but doesn't support schemas out of the box..
- mimesis: can't do gauss
** TODO [#C] use similar sample data download to bokeh? could be good for testing etc. :dashboard:project:
:PROPERTIES:
:CREATED:  [2020-08-23]
:ID:       ssmlrsmpldtdwnldtbkhcldbgdfrtstngtc
:END:
* [#B] * publicity & reaching out to other people
:PROPERTIES:
:ID:       pblctyrchngttthrppl
:END:
** TODO [#B] describe what I've done by the commit history? and comments etc :toblog:
:PROPERTIES:
:CREATED:  [2020-09-30]
:ID:       dscrbwhtvdnbythcmmthstryndcmmntstc
:END:

** TODO [#B] one of the goals is demonstraing the *architecture*     :toblog:
:PROPERTIES:
:CREATED:  [2020-05-22]
:ID:       nfthglssdmnstrngthrchtctr
:END:

I appreciate not everyone uses the same data as I do.
My point is showing that my private layer is actually pretty thin and you can implement something TODO suiting you by looking at mine as an example.

Same way as TODO think of some analogy? when you're using a todo list app, you've got your own unique pattern. Yet, we all benefit massively from sharing the same infrastructure
** TODO [#C] planetpython etc?                                      :publish:
:PROPERTIES:
:CREATED:  [2019-11-23]
:ID:       plntpythntc
:END:
** TODO [#C] [2021-02-15] [[https://twitter.com/InfluxDB][(6) InfluxData (@InfluxDB) / Twitter]] :hpi:publish:
:PROPERTIES:
:ID:       stwttrcmnflxdbnflxdtnflxdbtwttr
:END:
could tweet at them/grafana?
** TODO [#C] about endomondo shutting down and using runnerup for workouts, show the commits :hpi:tweet:outbox:
:PROPERTIES:
:CREATED:  [2021-01-12]
:ID:       btndmndshttngdwnndsngrnnrpfrwrktsshwthcmmts
:END:
** TODO [#D] publish the thing about HPI configs?                :hpi:toblog:
:PROPERTIES:
:CREATED:  [2020-05-10]
:ID:       pblshththngbthpcnfgs
:END:
** TODO [#B] tweet about hpi + photos integration        :hpi:totweet:outbox:
:PROPERTIES:
:CREATED:  [2020-11-25]
:ID:       twtbthpphtsntgrtn
:END:

have a screenshot
: datasette .cache/my.photos.main:_photos  --config max_returned_rows:20000

- [ ] can bookmark the query, so it's basically stateless
- [ ] stretch the map height
- [ ] need to add JS with file links (and possibly thumbnails? not sure if it's gonna work well)
* [#B] * enhancements
:PROPERTIES:
:ID:       nhncmnts
:END:
** STRT [#B] get rid of individual cache paths? there is no point in them really... :cachew:
:PROPERTIES:
:CREATED:  [2020-07-26]
:ID:       gtrdfndvdlcchpthsthrsnpntnthmrlly
:END:
** TODO [#C] rename mcachew to cachew?? so it's less confusing       :cachew:
:PROPERTIES:
:CREATED:  [2020-09-14]
:ID:       rnmmcchwtcchwstslsscnfsng
:END:
** TODO [#C] for stats frequency (e.g. bluemaestro), also need to calculate 'reverse frequency'? e.g. how many 1 minute intervals are covered
:PROPERTIES:
:CREATED:  [2020-08-23]
:ID:       frsttsfrqncygblmstrlsndtcrqncyghwmnymntntrvlsrcvrd
:END:
** TODO [#C] async interface (possibly async wrapper for the whole modules?) os it emits iterator of dataframes, and when thedata updated, new df is emitted
:PROPERTIES:
:CREATED:  [2020-09-30]
:ID:       syncntrfcpssblysyncwrpprfrmsndwhnthdtpdtdnwdfsmttd
:END:
** STRT [#C] use it in github provider after I support exceptions    :cachew:
:PROPERTIES:
:CREATED:  [2019-12-19]
:ID:       stngthbprvdrftrspprtxcptns
:END:
** TODO [#C] think about overlaying user config on top of default dynamically? not sure...
:PROPERTIES:
:CREATED:  [2020-10-31]
:ID:       thnkbtvrlyngsrcnfgntpfdfltdynmcllyntsr
:END:
** WAIT [#D] [2020-04-11] stephen-bunn/file-config: Attrs-like file config definitions inspired from https://github.com/hynek/environ_config :configs:
:PROPERTIES:
:ID:       stphnbnnflcnfgttrslkflcnfprdfrmsgthbcmhynknvrncnfg
:END:
https://github.com/stephen-bunn/file-config
** TODO [#C] treat deleted pinboard items as deleted/archived; expliclitly :hpi:pinboard:
:PROPERTIES:
:CREATED:  [2020-12-30]
:ID:       trtdltdpnbrdtmssdltdrchvdxplcltly
:END:
maybe need some nicer algorithm, to prevent flickering (maybe it doesn't happen anymore though)
** TODO [#C] need to add hooks to config that get executed when HPI is imported? so people could hack without changing apps' code
:PROPERTIES:
:CREATED:  [2020-09-17]
:ID:       ndtddhkstcnfgthtgtxctdwhnspplcldhckwthtchngngppscd
:END:
** TODO [#C] in v2.0, get rid of old my.config artifacts
:PROPERTIES:
:CREATED:  [2020-07-26]
:ID:       nvgtrdfldmycnfgrtfcts
:END:
*** [2021-03-23] or maybe don't quite break it... but keep tests? and some dynamic magic to hack the code dynamically
:PROPERTIES:
:ID:       rmybdntqtbrktbtkptstsndsmdynmcmgcthckthcddynmclly
:END:
** STRT [#C] [2019-12-12] Re: [Scarygami/location-history-json-converter] Streaming parsing (#16) :location:
:PROPERTIES:
:ID:       rscrygmlctnhstryjsncnvrtrstrmngprsng
:END:
: o Scarygami/location-history-json-converter, me, Author
: Streaming parsing (--iterative) is now possible.
: The functionality requires ijson to be installed.
** TODO [#C] ok, pipenv seems like a pleasant way of experimenting, maybe give it a shot
:PROPERTIES:
:CREATED:  [2020-09-27]
:ID:       kppnvsmslkplsntwyfxprmntngmybgvtsht
:END:
see https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe
** TODO [#C] maybe have a special tag, e.g. nohpi to shadow entries from hpi? although sometimes nice to retrieve all entries (but basically only one usecase for that, timeline) :org:hpi:
:PROPERTIES:
:CREATED:  [2020-10-10]
:ID:       mybhvspcltggnhptshdwntrsfsbtbscllynlynscsfrthttmln
:END:
** TODO [#D] [2019-12-30] [[https://github.com/esnme/ultrajson][esnme/ultrajson: Ultra fast JSON decoder and encoder written in C with Python bindings]]
:PROPERTIES:
:ID:       sgthbcmsnmltrjsnsnmltrjsnncdrwrttnncwthpythnbndngs
:END:
make it optional dependency with fallback?
*** [#C] [2020-01-16] didn't seem like it'd be massive speedup?
:PROPERTIES:
:ID:       ddntsmlktdbmssvspdp
:END:
** [#C] [2020-05-15] [[https://github.com/python/mypy/issues/7866][Type alias as a class member is not valid as a type · Issue #7866 · python/mypy]] :mypy:hpi:
:PROPERTIES:
:ID:       sgthbcmpythnmypyssstyplssmmbrsntvldstypsspythnmypy
:END:
: Alias = NamedTuple("Alias", [("field", str)])

hmm, alias could be used as 'Like' type? for make_config
** TODO [#C] [2020-05-12] [[https://github.com/karlicoss/HPI/blob/master/doc/CONFIGURING.org][HPI/CONFIGURING.org at master · karlicoss/HPI]]  defensive Protocol stub?
:PROPERTIES:
:ID:       sgthbcmkrlcsshpblbmstrdccmstrkrlcsshpdfnsvprtclstb
:END:
: so using it requires guarding the code with if typing.TYPE_CHECKING, which is a bit confusing and bloating.

could have a defensive import in my.core.typing
*** [2020-09-28] I guess my.core.compat makes more sense for such stuff
:PROPERTIES:
:ID:       gssmycrcmptmksmrsnsfrschstff
:END:
** [#D] [2019-12-24] inspiration: credentials dashboard? Huginn         :hpi:
:PROPERTIES:
:ID:       nsprtncrdntlsdshbrdhgnn
:END:
: Your Credentials
:     Credentials are used to store values used by many Agents. Examples might include "twitter_consumer_secret", "user_full_name", or "user_birthday".
** CNCL [#D] 'hpi shell' command launches python shell
:PROPERTIES:
:CREATED:  [2019-12-09]
:ID:       hpshllcmmndlnchspythnshll
:END:
*** [2020-03-14] wmy alias to start with
:PROPERTIES:
:ID:       wmylststrtwth
:END:
*** [2020-09-21] and then what? seem complicated
:PROPERTIES:
:ID:       ndthnwhtsmcmplctd
:END:
*** [2020-09-28] actully, pyenv shell in hpi env could make more sense?
:PROPERTIES:
:ID:       ctllypynvshllnhpnvcldmkmrsns
:END:

** STRT [#B] configuration                                              :hpi:
:PROPERTIES:
:CREATED:  [2020-09-29]
:ID:       cnfgrtn
:END:
: from my.config import core as user_config # type: ignore[attr-defined]

maybe instead of defining dynamic bits, import stuff from my.module.config? and then override? not sure
** TODO [#B] entity guessing: in materialistic module, make sure hpi stat my.materialistic returns last entity time :hpi:
:PROPERTIES:
:CREATED:  [2021-03-08]
:ID:       nttygssngnmtrlstcmdlmksrhttmymtrlstcrtrnslstnttytm
:END:
** [#B] automatic ids
:PROPERTIES:
:ID:       tmtcds
:END:
*** [2021-03-07] if there is a unique timestamp, use it as implicit id? :hpi:
:PROPERTIES:
:ID:       fthrsnqtmstmpstsmplctd
:END:
*** [2021-03-07] for ID: implement an uid function? not sure how to type it reliably though... :hpi:
:PROPERTIES:
:ID:       frdmplmntndfnctnntsrhwttyptrlblythgh
:END:
*** [2021-03-07] ids                                                    :hpi:
:PROPERTIES:
:ID:       ds
:END:
IDS should be optional, in that case could use implicit ID like timestamps or even 'index' of the item in sequence. in practice it would be stable enought?
or use hash of some other metadata
*** [2021-03-08] automatic ID: guess from increasing field?             :hpi:
:PROPERTIES:
:ID:       tmtcdgssfrmncrsngfld
:END:
** TODO [#C] [2021-04-04] [[https://click.palletsprojects.com/en/7.x/bashcomplete/][Shell Completion — Click Documentation (7.x)]] :hpi:
:PROPERTIES:
:ID:       sclckplltsprjctscmnxbshcmpltshllcmpltnclckdcmnttnx
:END:

* [#C] * bugs/issues
:PROPERTIES:
:ID:       bgssss
:END:
** [#C] github issues
:PROPERTIES:
:ID:       gthbsss
:END:
*** STRT [#C] For demos of my tools generate fake data? Automatically map over fields; maybe env var? :jdoe:
:PROPERTIES:
:CREATED:  [2019-07-11]
:ID:       frdmsfmytlsgnrtfkdttmtcllympvrfldsmybnvvr
:END:
- [2020-04-12] https://github.com/karlicoss/HPI/issues/15

*** STRT [#C] wonder if could make http api with smth automatic? not sure how feasible it'd be though..
:PROPERTIES:
:CREATED:  [2020-01-15]
:ID:       wndrfcldmkpwthsmthtmtcntsrhwfsbltdbthgh
:END:
- [2020-04-12] https://github.com/karlicoss/HPI/issues/16
*** STRT [#C] Have defensive policy for me/other people
:PROPERTIES:
:CREATED:  [2020-01-16]
:ID:       hvdfnsvplcyfrmthrppl
:END:
- [2020-04-12] https://github.com/karlicoss/HPI/issues/17

** TODO [#C] windows compatibility..                                    :hpi:
:PROPERTIES:
:CREATED:  [2021-02-16]
:ID:       wndwscmptblty
:END:
- [ ] hpi doctor fails with some inf recursion??
- [ ] my.location.takeout module is mentioned but unavailable??
** TODO [#C] hmm, iterator in ~iter_tzs~ never exhausts? cause it doesn't go over the last year. so it won't cache things??
:PROPERTIES:
:CREATED:  [2020-10-08]
:ID:       hmmtrtrntrtzsnvrxhstscstdntgvrthlstyrstwntcchthngs
:END:
and then, location caching also never properly happens. uhoh
** TODO [#C] MY_CONFIG should resolve path to absolute?
:PROPERTIES:
:CREATED:  [2020-12-02]
:ID:       mycnfgshldrslvpthtbslt
:END:
** TODO [#D] tzabbr hack attempt
:PROPERTIES:
:CREATED:  [2020-10-26]
:ID:       tzbbrhckttmpt
:END:
: for zone in pytz.all_timezones:
:     tz = pytz.timezone(zone)
:     infos = getattr(tz, '_tzinfos', [])
:     for _, _, x in infos:
:         tz_lookup[x] = tz
** TODO [#C] doctor: for compileall check need to use tmp path?         :hpi:
:PROPERTIES:
:CREATED:  [2021-03-16]
:ID:       dctrfrcmplllchckndtstmppth
:END:
: ✅ config file : /.config/my/my/config/__init__.py
: Compiling '/.config/my/my/config/__init__.py'...
: *** OSError: [Errno 30] Read-only file system: '/.config/my/my/config/__pycache__'
** TODO [#C] hmm stats look a bit off?                                  :hpi:
:PROPERTIES:
:CREATED:  [2021-03-26]
:ID:       hmmsttslkbtff
:END:
: ✅ OK  : my.reading.goodreads
: ✅     - stats: {'books': {'books': {'count': 222, 'last': datetime.datetime(2013, 7, 14, 2, 58, 4, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200)))}}, 'events': {'events': {'count': 222, 'last': datetime.datetime(2013, 7, 14, 2, 58, 4, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200)))}}, 'inputs': {'inputs': {'count': 934}}, 'reviews': {'reviews': {'count': 222}}}
** TODO [#C] this is when forget parens after @cachew                   :hpi:
:PROPERTIES:
:CREATED:  [2021-03-09]
:ID:       thsswhnfrgtprnsftrcchw
:END:
:  ❯ python3 xx.py
: Traceback (most recent call last)
:   File "xx.py", line 6, in <module>
:     for x in M.bookmarks():
: TypeError: <lambda>() missing 1 required positional argument: 'realf'
* [#D] * misc
:PROPERTIES:
:ID:       msc
:END:
Uncategorized stuff
** STRT [#B] integrate with private overlay
:PROPERTIES:
:CREATED:  [2020-10-09]
:ID:       ntgrtwthprvtvrly
:END:
need to test behaviour w.r.t order of running local install?
** TODO [#B] Automatic sqlite interface.. People seem to like it?    :cachew:
:PROPERTIES:
:CREATED:  [2020-05-02]
:ID:       tmtcsqltntrfcpplsmtlkt
:END:
*** [2020-09-21] yep, again would be easy to map from pandas?
:PROPERTIES:
:ID:       ypgnwldbsytmpfrmpnds
:END:
*** [2020-11-01] that would def be very useful for automatic discovery... maybe start with some markers
:PROPERTIES:
:ID:       thtwlddfbvrysflfrtmtcdscvrymybstrtwthsmmrkrs
:END:
*** [2020-11-24] maybe promnesia sqlite module, similarly to doctor..
:PROPERTIES:
:ID:       mybprmnssqltmdlsmlrlytdctr
:END:
** TODO [#B] [2020-12-07] [[https://news.ycombinator.com/item?id=25304257][CLI Guidelines – A guide to help you write better command-line programs | Hacker News]]
:PROPERTIES:
:ID:       snwsycmbntrcmtmdclgdlnsgdtbttrcmmndlnprgrmshckrnws
:END:
: if you are displaying tabular data, present an ncurses interface

feed into visidata?
** [#B] [2020-11-14] [[https://news.ycombinator.com/item?id=25090218][Personal Data Warehouses: Reclaiming Your Data | Hacker News]]
:PROPERTIES:
:ID:       snwsycmbntrcmtmdprsnldtwrhssrclmngyrdthckrnws
:END:
: I believe all data warehouses are limited by the quality of their data model. Most start with good relational intentions over a small domain, but eventually get bogged down arguing how semantic angels might dance on ontological pins. The parts that work become ossified and impossible to change. The system starts to fragment into multiple federated datastores or unstructured file dumps (“big data!”) where you have to build your own integration every time you want to use the data. Someone comes along and proposes a unifying model (“everything is an event!”) and rebuilds the whole thing but with an extra layer of complexity. Someone suggests buying an industry data model instead - surely the data experts will have solved all these problems for us? A skunkworks project spins up and starts implementing the bought model with good relational intentions over a small domain...
: I don’t think personal data warehouses are immune to any of these forces.
** TODO [#C] github traffic dashboard for each repo?             :hpi:toblog:
:PROPERTIES:
:CREATED:  [2020-10-01]
:ID:       gthbtrffcdshbrdfrchrp
:END:
** TODO [#C] [2020-12-07] [[https://nitter.net/LeahNeukirchen/status/1335669406588923905][Leah Neukirchen (@LeahNeukirchen): "I put my IRC logs of the last decade into that, here is a dot for all 489398 lines I wrote:" | nitter]] :viz:
:PROPERTIES:
:ID:       snttrntlhnkrchnsttslhnkrcdntththrsdtfrlllnswrtnttr
:END:
https://twitter.com/LeahNeukirchen/status/1335669406588923905
: I put my IRC logs of the last decade into that, here is a dot for all 489398 lines I wrote:
** TODO [#C] could write a tool to process historic stats for github referrers etc? :toblog:coding:
:PROPERTIES:
:CREATED:  [2020-04-29]
:ID:       cldwrttltprcsshstrcsttsfrgthbrfrrrstc
:END:

** [#C] [2021-02-23] [[https://tiendil.org/yet-another-tarantoga/][Yet another Тарантога]] :hpi:
:PROPERTIES:
:ID:       stndlrgytnthrtrntgytnthrтарантога
:END:
** [#C] [2020-10-05] [[https://github.com/seanbreckenridge/HPI/commit/fbe4ffca13f24ccaed6cc729b4ef0284a7221722][mention data gathering libraries · seanbreckenridge/HPI@fbe4ffc]]
:PROPERTIES:
:ID:       sgthbcmsnbrcknrdghpcmmtfbrnglbrrssnbrcknrdghpfbffc
:END:
: Disregarding tools which actively collect data (like [`ttt`](https://github.com/seanbreckenridge/ttt)/[`window_watcher`](https://github.com/seanbreckenridge/aw-watcher-window)), I have some other libraries I've created for this project, to provide more context to some of the data.
: - [`ipgeocache`](https://github.com/seanbreckenridge/ipgeocache) - for any IPs gathered from data exports, provides geolocation info, so I have location info going back to 2013 (thanks facebook)
** [#C] [2020-10-19] [[https://github.com/dentropy/Blog/blob/45f5922e999cc1ad8dba74f695d3762bed3624f6/docs/notes/ddde0c1c-8f73-47ff-803a-342f85a5fa72.md][Blog/ddde0c1c-8f73-47ff-803a-342f85a5fa72.md at 45f5922e999cc1ad8dba74f695d3762bed3624f6 · dentropy/Blog]]
:PROPERTIES:
:ID:       sgthbcmdntrpyblgblbfccddbffmdtfccddbfdbdfdntrpyblg
:END:
: What features would I want in my HPI?
** TODO [#D] [2020-09-19] [[https://github.com/seanbreckenridge/HPI/commit/90a16bb686c8e3e57ccd48c37647b4f4c57a4cdb][iterable -> iterator · seanbreckenridge/HPI@90a16bb]]
:PROPERTIES:
:ID:       sgthbcmsnbrcknrdghpcmmtbbcdbtrbltrtrsnbrcknrdghpbb
:END:
wonder why did he do that?
Iterable needs to be iter(), e.g. you can't return list as Iterator
** TODO [#D] Slots vs dataclasses                               :python:mypy:
:PROPERTIES:
:CREATED:  [2020-02-12]
:ID:       sltsvsdtclsss
:END:
: Good writeup. A couple points.
: `zope.interface` is more explicit and scalable than `typing.Protocol`s, and more flexible than `abc.ABC`. There's a mypy plugin for it: https://github.com/Shoobx/mypy-zope
: > The drawback is that code that changes the representation of its data a lot tends not to be fast code.
: That's not a very convincing reason to avoid dataclasses except in the most performance-constrained environments -- and even then I'm doubtful it'd help. Especially with `slots=True`, dataclasses can take less resources.
*** TODO [2020-09-28] this could be some sort of meta-attribute? e.g. if someone needs to override, they can monkey patch slots=False? would be nice to add to some FAQ
:PROPERTIES:
:ID:       thscldbsmsrtfmtttrbtgfsmnptchsltsflswldbnctddtsmfq
:END:
** TODO [#D] [2020-01-01] John Stultz on Twitter: "random idea: Want something that I can point it at various services (imap/rss/other web services like gphotos,twitter) or takeout archives and it will import/dedup/index/archive locally on my system." / Twitter https://twitter.com/johnstultz_work/status/1156691692772196352 :hpi:webarchive:
:PROPERTIES:
:ID:       jhnstltzntwttrrndmdwntsmttrstwttrcmjhnstltzwrkstts
:END:
: John Stultz
: @johnstultz_work
: random idea: Want something that I can point it at various services (imap/rss/other web services like gphotos,twitter) or takeout archives and it will import/dedup/index/archive locally on my system.
** [#D] [2020-05-16] [[https://lobste.rs/u/awal][User awal | Lobsters]]
:PROPERTIES:
:ID:       slbstrswlsrwllbstrs
:END:
: Anyway, thanks a lot for building all this stuff. Definitely gonna explore and it also helped me refine some of my thoughts on the subject!
** DONE [#A] [2020-05-02] [[https://hyfen.net/memex/updates/putting-the-memex-into-a-container-shazam-other-memex-sightings][hyfen.net/memex/updates/putting-the-memex-into-a-container-shazam-other-memex-sightings]]
:PROPERTIES:
:ID:       shyfnntmmxpdtspttngthmmxnxntcntnrshzmthrmmxsghtngs
:END:
: My main objective right now is packaging what I’m working on into something that I can easily get to beta testers.
** [#B] [2021-03-09] tried using monkeypatch to infer output types.. :types:hpi:
:PROPERTIES:
:ID:       trdsngmnkyptchtnfrtpttyps
:END:
tried with my.pinboard module for bookmarks() function:
- can infer List[Bookmark]
- can infer List[Union[Bookmark, RuntimeError]]
- doesn't seems to be able to infer yield... pretty annoying

so all in all seems that it would be easier to assume Res[X] and try to guess X?
** TODO [#B] "data repository" is a good description?                   :hpi:
:PROPERTIES:
:CREATED:  [2021-03-10]
:ID:       dtrpstrysgddscrptn
:END:
** TODO [#C] shit Url alias doesn't work...                             :hpi:
:PROPERTIES:
:CREATED:  [2021-03-09]
:ID:       shtrllsdsntwrk
:END:
: Url = NewType('Url', str)

what's up with this Bookmark thing??
: [ins] In [24]: inspect.signature(Bookmark.url.fget)
: Out[24]: <Signature (self) -> <function NewType.<locals>.new_type at 0x7f9c8626ce50>>
** TODO [#C] [2021-03-07] [[https://hypothes.is/a/-WYcvHYdEeustePidk7lwA][Hypothesis]] :hpi:
:PROPERTIES:
:ID:       shypthsswycvhydstpdklwhypthss
:END:
update hypothesis link?
** STRT [#C] [2021-03-08] [[https://github.com/instagram/MonkeyType][Instagram/MonkeyType: A system for Python that generates static type annotations by collecting runtime types]] :hpi:cachew:
:PROPERTIES:
:ID:       sgthbcmnstgrmmnkytypnstgrypnnttnsbycllctngrntmtyps
:END:
: MonkeyType collects runtime types of function arguments and return values, and can automatically generate stub files or even add draft type annotations directly to your Python code based on the types collected at runtime.

could use for some magic caching/inference of serialization? not sure
** [#C] [2021-04-12] [[https://en.wikipedia.org/wiki/Extract,_transform,_load][Extract, transform, load - Wikipedia]] :hpi:
:PROPERTIES:
:ID:       snwkpdrgwkxtrcttrnsfrmldxtrcttrnsfrmldwkpd
:END:
I guess it's kind of 'auto'? Although ETL sounds a bit magical
** TODO [#C] [2021-03-13] [[https://github.com/markwk/qs_ledger/blob/master/instapaper/instapaper_downloader.ipynb][qs_ledger/instapaper_downloader.ipynb at master · markwk/qs_ledger]] :hpi:
:PROPERTIES:
:ID:       sgthbcmmrkwkqsldgrblbmstrwnldrpynbtmstrmrkwkqsldgr
:END:
see what's their approach to credentials
* --------------------------------------------
:PROPERTIES:
:ID:       57059_57107
:END:

* TODO [#D] classify modules by ease of setup?                          :hpi:
:PROPERTIES:
:CREATED:  [2021-04-14]
:ID:       clssfymdlsbysfstp
:END:
* TODO [#B] I'm not inventing anything new -- trying to apply simplicity, decomposition and resilience principles :hpi:
:PROPERTIES:
:CREATED:  [2021-04-14]
:ID:       mntnvntngnythngnwtryngtpplctydcmpstnndrslncprncpls
:END:
* TODO [#C] ids are useful to mark some stuff as public (e.g. annotations) :hpi:memex:
:PROPERTIES:
:CREATED:  [2021-04-29]
:ID:       dsrsfltmrksmstffspblcgnnttns
:END:
* TODO [#C] could implement some helper that prompts visidata for column types :visidata:hpi:
:PROPERTIES:
:CREATED:  [2021-05-04]
:ID:       cldmplmntsmhlprthtprmptsvsdtfrclmntyps
:END:
* TODO [#B] why ids important: ranking items after overview             :hpi:
:PROPERTIES:
:CREATED:  [2021-05-18]
:ID:       whydsmprtntrnkngtmsftrvrvw
:END:
