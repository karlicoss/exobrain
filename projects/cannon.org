#+title: ⭐ Cannon
#+filetags: cannon

Cannon is an idea for a project attempting to compute canonical/normalised URLs and extract some information from them ('entities'), merely by looking at the URL, and ideally without using the "rel=canonical" metadata.
I describe the problem it tries to solve here: [[https://beepb00p.xyz/promnesia.html#urls_broken]["urls are broken"]], also see "motivation".

At the moment it's a subproject of promnesia: see [[https://github.com/karlicoss/promnesia/blob/master/src/promnesia/cannon.py][cannon.py]]
and [[https://github.com/karlicoss/promnesia/blob/master/tests/cannon.py][tests/cannon.py]].

If anyone knows of similar efforts/prior art, *please let me know*! I'd really like to avoid reinvening the wheel here.

* related
:PROPERTIES:
:ID:       rltd
:END:
** promnesia as a primary application (for me)                    :promnesia:
:PROPERTIES:
:ID:       prmnssprmrypplctnfrm
:END:
** .                                                                :linkrot:
:PROPERTIES:
:END:
* [#A] * motivation
:PROPERTIES:
:ID:       mtvtn
:END:
Once you are sold on motivation in this section, and wondering why would this require a separate library/database, check out "testcases" section.
** [#A] [2020-04-04] I want urls that represent information, regardless the way it's presented
:PROPERTIES:
:ID:       wntrlsthtrprsntnfrmtnrgrdlssthwytsprsntd
:END:
let alone all the tracking/etc crap
*** [#B] [2020-05-23] "document equivalence" is a good term: [[https://web.hypothes.is/help/how-to-establish-or-avoid-document-equivalence-in-the-hypothesis-system/][How to establish (or avoid) document equivalence in the Hypothesis system : Hypothesis]]
:PROPERTIES:
:ID:       dcmntqvlncsgdtrmswbhypthslncnthhypthsssystmhypthss
:END:
** [#B] why not use "rel=canonical" metadata field?
:PROPERTIES:
:ID:       whyntsrlcnnclmtdtfld
:END:
*** [#B] [2020-05-27] [[https://news.ycombinator.com/item?id=23322730][Google no longer providing original URL in AMP for image search results]]
:PROPERTIES:
:ID:       snwsycmbntrcmtmdgglnlngrpdngrgnlrlnmpfrmgsrchrslts
:END:
*** [#B] [2019-10-11] mobile versions of sites sometimes have different "canonical", e.g. mobile.twitter.com
:PROPERTIES:
:ID:       mblvrsnsfstssmtmshvdffrntcnnclgmbltwttrcm
:END:
No one would argue that a tweet is the same regardless where it's presented, yet there is no easy way to unify this
*** [#C] [2020-05-28] archive.org is messing with canonical          :cannon:
:PROPERTIES:
:ID:       rchvrgsmssngwthcnncl
:END:
*** [#D] [2019-11-02] e.g. this link doesn't have 'canonical' even though it's a mirror: https://solar.lowtechmagazine.com/2016/11/the-curse-of-the-modern-office.html
:PROPERTIES:
:ID:       gthslnkdsnthvcnnclvnthghtmgzncmthcrsfthmdrnffchtml
:END:
*** [#D] [2019-11-08] no canonical on gist https://gist.github.com/dneto/2258454
:PROPERTIES:
:ID:       ncnnclngstsgstgthbcmdnt
:END:
same as https://gist.github.com/2258454 -- hmm, this thing redirects now..
** [#B] [2019-08-19] parent and sibling relations can be determined from the URL :cannon:promnesia:
:PROPERTIES:
:ID:       prntndsblngrltnscnbdtrmndfrmthrl
:END:
e.g. subreddit-post/user-comment/user-tweet, etc.
** [#B] [2019-11-01] if the original page is gone I can still easily link my saved annotations (Instapaper/Pocket/Hypothesis) to archived page
:PROPERTIES:
:ID:       fthrgnlpgsgncnstllslylnkmnstpprpckthypthsstrchvdpg
:END:
https://web.archive.org/web/20090902224414/http://reason.com/news/show/119237.html
** [#B] [2019-09-07] urls a good candidate to determine 'entities' because they sure at least somewhat curated :cannon:
:PROPERTIES:
:ID:       rlsgdcnddttdtrmnnttsbcsthysrtlstsmwhtcrtd
:END:
** [#C] [2019-02-24] normalization is tricky.. for some urls, stuff after # is important https://en.wikipedia.org/wiki/Tendon#cite_note-14 . for some, it's utter garbage
:PROPERTIES:
:ID:       nrmlztnstrckyfrsmrlsstfffrgwktndnctntfrsmtsttrgrbg
:END:
however we can sort of get away with normalizing on server only?
** DONE [#C] [2019-08-07] The Problem With URLs https://blog.codinghorror.com/the-problem-with-urls/
:PROPERTIES:
:ID:       thprblmwthrlssblgcdnghrrrcmthprblmwthrls
:END:
- [2019-08-27] not very insigntful, example of msdn with weird characters in urls
** [#C] [2020-01-02] motivation: siloing: instapaper 'imports' pages and assigns an id: https://www.instapaper.com/read/1265139707
:PROPERTIES:
:ID:       mtvtnslngnstpprmprtspgsndssgnsndswwwnstpprcmrd
:END:
so you can't connect your annotations on instapaper to notes etc

** [#C] [2021-03-07] could normalize historic URLs which are already down? :linkrot:
:PROPERTIES:
:ID:       cldnrmlzhstrcrlswhchrlrdydwn
:END:
perhaps not super useful if we can't access them, but still
* [#A] * projects that could benefit from it
:PROPERTIES:
:ID:       prjctsthtcldbnftfrmt
:END:
Apart from Promnesia, I believe it could be quite useful for other projects.
** STRT [#B] [2019-06-27] Hmm could be helpful for hypothesis?   :hypothesis:
:PROPERTIES:
:ID:       hmmcldbhlpflfrhypthss
:END:
- [2020-04-29] write about it? the future?
*** NEXT [#B] [2021-01-16] discuss about cannon (maybe on Slack)? :hypothesis:cannon:
:PROPERTIES:
:ID:       dscssbtcnnnmybnslck
:END:
*** [#C] [2019-05-24] [[https://groups.google.com/a/list.hypothes.is/forum/#!topic/dev/kcmS7H8ssis][Annotation of content on sites like Facebook or Twitter? - Google Groups]] :hypothesis:
:PROPERTIES:
:ID:       sgrpsgglcmlsthypthssfrmtpntnstslkfcbkrtwttrgglgrps
:END:
kinda related since they basically want canonical urls
** TODO [#B] [2021-01-30] [[https://community.worldbrain.io/t/ignore-url-parameters/551/5][Ignore URL parameters - Feature Requests - Memex Community]] :worldbrain:
:PROPERTIES:
:ID:       scmmntywrldbrntgnrrlprmtrrlprmtrsftrrqstsmmxcmmnty
:END:
** TODO [#C] [2021-01-22] wonder if we could cooperate?        :agora:cannon:
:PROPERTIES:
:ID:       wndrfwcldcprt
:END:
** TODO [#C] [2021-01-24] would be useful to use the same normalising engine for #archivebox for example? :webarchive:
:PROPERTIES:
:ID:       wldbsfltsthsmnrmlsngngnfrrchvbxfrxmpl
:END:
- [2021-03-10] although I guess it needs to fetch the page anyway so "rel=canonical" works we ll enough
** TODO [#C] [2021-02-07] could be useful for surfingkey/nyxt browser to hint 'interesting' urls?
:PROPERTIES:
:ID:       cldbsflfrsrfngkynyxtbrwsrthntntrstngrls
:END:
** STRT [#C] [2019-12-26] archive.org                               :linkrot:
:PROPERTIES:
:ID:       rchvrg
:END:
e.g. if the link is not present in archive.org, it doesn't mean it's not archived under a different canonical
** TODO [#C] if it's implemented as a helper extension/library, it could be useful for many other extensions
:PROPERTIES:
:CREATED:  [2020-11-17]
:ID:       ftsmplmntdshlprxtnsnlbrrytcldbsflfrmnythrxtnsns
:END:
e.g. blockers, various highlighters, hypothesis, etc
** TODO [#D] [2020-12-07] [[https://github.com/einaregilsson/Redirector][einaregilsson/Redirector: Browser extension (Firefox, Chrome, Opera, Edge) to redirect urls based on regex patterns, like a client side =mod_rewrite= ]]
:PROPERTIES:
:ID:       sgthbcmnrglssnrdrctrnrglsdnrgxpttrnslkclntsdmdrwrt
:END:
** TODO [#D] [2020-11-20] could reuse URL underlying etc with ampie?  :ampie:
:PROPERTIES:
:ID:       cldrsrlndrlyngtcwthmp
:END:
* [#A] * prior art
:PROPERTIES:
:ID:       prrrt
:END:
URL normalization algorithm should be shared with other projects to the maximum extent possible.
If not the exact algorithm, at least the 'curated' parts of it like regexes, testcases, etc should be shared.
It's a crap boring work that should be only done once (e.g. like timezones database).

** TODO [#A] [2020-06-30] [[https://github.com/ClearURLs/Addon#application][ClearURLs / Addon]]: looks super super promising
:PROPERTIES:
:ID:       sgthbcmclrrlsddnpplctnclrrlsddnlkssprsprprmsng
:END:
: Once ClearURLs has cleaned the address, it will look like this: https://www.amazon.com/dp/exampleProduct
*** [2021-03-10] https://github.com/ClearURLs/Addon/wiki/Rules:  Not super convinced JSON would work well in general, but anyway it's already pretty good.
:PROPERTIES:
:ID:       sgthbcmclrrlsddnwkrlsntsplngnrlbtnywytslrdyprttygd
:END:
** TODO [#B] [2020-11-22] [[https://github.com/WorldBrain/memex-url-utils][WorldBrain/memex-url-utils: Shared URL processing utilities for Memex extension and mobile apps.]] :worldbrain:
:PROPERTIES:
:ID:       sgthbcmwrldbrnmmxrltlswrlsngtltsfrmmxxtnsnndmblpps
:END:
** TODO [#B] [2019-07-09] h/uri.py at 0fc8a0d345741d43b4f80856a7cbb8f5afa70f80 · hypothesis/h https://github.com/hypothesis/h/blob/0fc8a0d345741d43b4f80856a7cbb8f5afa70f80/h/util/uri.py :hypothesis:
:PROPERTIES:
:ID:       hrpytfcddbfcbbfffhypthsshhsshblbfcddbfcbbfffhtlrpy
:END:
*** [2019-07-09] excluded query params!
:PROPERTIES:
:ID:       xclddqryprms
:END:
*** [2019-07-09] right, I could probably reuse hypothesis's canonify and contribute back. looks very similar to mine
:PROPERTIES:
:ID:       rghtcldprbblyrshypthssscnyndcntrbtbcklksvrysmlrtmn
:END:
** TODO [#B] [2020-05-12] [[https://github.com/coleifer/micawber][coleifer/micawber: a small library for extracting rich content from urls]]
:PROPERTIES:
:ID:       sgthbcmclfrmcwbrclfrmcwbrryfrxtrctngrchcntntfrmrls
:END:
*** [2021-03-10] ok, pretty interesting. it probably uses network, but could at least use it for testing (or maybe even 'enriching'?)
:PROPERTIES:
:ID:       kprttyntrstngtprbblyssntwtlststfrtstngrmybvnnrchng
:END:
** TODO [#C] [2019-03-27] [[https://github.com/sindresorhus/compare-urls][sindresorhus/compare-urls: Compare URLs by first normalizing them]]
:PROPERTIES:
:ID:       sgthbcmsndrsrhscmprrlssndlscmprrlsbyfrstnrmlzngthm
:END:
: compareUrls('HTTP://sindresorhus.com/?b=b&a=a', 'sindresorhus.com/?a=a&b=b');
*** [#C] [2019-12-25] [[https://github.com/sindresorhus/normalize-url][sindresorhus/normalize-url]]
:PROPERTIES:
:ID:       sgthbcmsndrsrhsnrmlzrlsndrsrhsnrmlzrl
:END:
=stripWWW= can't handle amp etc
** TODO [#C] [2019-07-09] [[https://github.com/hypothesis/h/blob/0fc8a0d345741d43b4f80856a7cbb8f5afa70f80/tests/h/cli/commands/normalize_uris_test.py][hypothesis: ~h/normalize_uris_test.py~]]
:PROPERTIES:
:ID:       sgthbcmhypthsshblbfcddbfctstpyhypthsshnrmlzrststpy
:END:
** TODO [#C] [2019-04-16] [[https://github.com/niksite/url-normalize][niksite/url-normalize: URL normalization for Python]]
:PROPERTIES:
:ID:       sgthbcmnkstrlnrmlznkstrlnrmlzrlnrmlztnfrpythn
:END:
** TODO [#C] [2020-04-27] [[https://github.com/john-kurkowski/tldextract][john-kurkowski/tldextract: Accurately separate the TLD from the registered domain and subdomains of a URL, using the Public Suffix List.]]
:PROPERTIES:
:ID:       sgthbcmjhnkrkwsktldxtrctjsbdmnsfrlsngthpblcsffxlst
:END:
hmm could use this for better extraction...
** TODO [#C] [2019-03-27] [[https://github.com/rbaier/python-urltools][rbaier/python-urltools: Some functions to parse and normalize URLs.]]
:PROPERTIES:
:ID:       sgthbcmrbrpythnrltlsrbrpytlssmfnctnstprsndnrmlzrls
:END:
* [#B] * ideas
:PROPERTIES:
:ID:       ds
:END:
** [#B] [2021-03-07] maybe we can achieve 95% accuracy with generic rules and by handling the most popular websites
:PROPERTIES:
:ID:       mybwcnchvccrcywthgnrcrlsndbyhndlngthmstpplrwbsts
:END:
for the rest
- allow user to customize
- allow user to submit normalization errors (where?)
** TODO [#B] if 'children' relations can't be determined by substring matching, perhaps cannon should generate 'virtual' urls? :promnesia:cannon:
:PROPERTIES:
:CREATED:  [2019-10-13]
:ID:       fchldrnrltnscntbdtrmndbysgprhpscnnnshldgnrtvrtlrls
:END:
** TODO [#B] a special service to resolve siloed links like t.co ?  :linkrot:
:PROPERTIES:
:CREATED:  [2020-04-29]
:ID:       spclsrvctrslvsldlnkslktc
:END:
Could also be useful for Archive.org/archivebox/etc. But a bit out of scope for this project..
** STRT [#B] just specify admissible regexes for urls so it's easier to unify?
:PROPERTIES:
:CREATED:  [2019-11-08]
:ID:       jstspcfydmssblrgxsfrrlsstssrtnfy
:END:
e.g. twitter.com/user/status/statusid

maybe normalise to this?
twitter.com/i/web/status/1053151870791835649

reddit.com/comments/5ombk8 -- huh, normalise to this?
TODO m.readdit/old.reddit


en.m.wikipedia/ru.m.wikipedia
maybe stripp off subdom completely?


youtube.com/watch?v=xAy---wp_DQ&list=PL0k_yDgrqAiU_EF5d7krLIds1ebhTxCjm&shuffle=221
youtube.com/watch?v=Woa3MPijE3s&list=PL0k_yDgrqAiXKspaa1GIS0jbbLrsAa3sk&spfreload=10
*** [2019-11-09] also this to summarize
:PROPERTIES:
:ID:       lsthstsmmrz
:END:
sqlite3 promnesia.sqlite 'select domain, count(domain) from (select substr(norm_url, 0, instr(norm_url, "/")) as domain from visits) group by domain order by count(domain)'

** STRT [#B] rethinking the whole approach...
:PROPERTIES:
:CREATED:  [2020-11-15]
:ID:       rthnkngthwhlpprch
:END:
consider https://www.youtube.com/watch?v=wHrCkyoe72U&list=WL
basically
- cut of protocol just merely for simplicity? I guess makes everything much easier
- the result is always 'composed of' inputs. e.g. maps to youtube/wHrCkyoe72U, both parts are in the original link
  might not be the case if domain names are remapped though.. e.g. youtu.be
- sort query parts alphabetically
  (although might make sense to make it hierarchy aware?)
- treat parts & query the same way, parts are query with None keys
- to handle domain names better, replace dots before first / with /: e.g. www.youtube.com/ -> www/youtube/com
  then cat treat the same way as subpaths
  i.e. we get
  None www          | drop
  None youtube      | keep
  None com          | drop
  None watch        | drop
  list WL           | keep? -- actually this could be considered a 'tag'? unclear
  v    wHrCkyoe72U  | keep
ok so how do we generalize from two examples?
 e.g. say we also have
 youtube.ru/watch?v=abacaba -> youtube/abacaba
 we get
      youtube | keep
      ru      | drop
      watch   | drop
 v    abacaba | keep
I suppose it could guess that if we keep a query parameter once, we'll keep it always?
and if we extracted a certain substring without a query parameter, we'll also always keep it as is?

TODO how about this?
https://news.ycombinator.com/reply?id=25100810&goto=item%3Fid%3D25099862%2325100810
it's a reply to       https://news.ycombinator.com/item?id=25100035
which is a comment to https://news.ycombinator.com/item?id=25099862
** TODO [#C] use shared JS/python tests for canonifying?      :ffi:promnesia:
:PROPERTIES:
:CREATED:  [2020-11-12]
:ID:       sshrdjspythntstsfrcnnfyng
:END:
** TODO [#C] [2019-09-03] should be idempotent?
:PROPERTIES:
:ID:       shldbdmptnt
:END:
** TODO [#C] hmm, maybe the extension can learn normalisation ruls over time? by looking at canonical and refining the rules?
:PROPERTIES:
:CREATED:  [2020-12-20]
:ID:       hmmmybthxtnsncnlrnnrmlstnmbylkngtcnnclndrfnngthrls
:END:
** TODO [#C] sample random links and their canonicals for testing
:PROPERTIES:
:CREATED:  [2020-12-20]
:ID:       smplrndmlnksndthrcnnclsfrtstng
:END:
** TODO [#C] background thing that sucks in canonical urls and provides data for testing? :promnesia:
:PROPERTIES:
:CREATED:  [2020-05-12]
:ID:       bckgrndthngthtscksncnnclrlsndprvdsdtfrtstng
:END:
** TODO [#C] how do we prune links that are potentially not secure to store? like certain URL parameters
:PROPERTIES:
:CREATED:  [2020-05-20]
:ID:       hwdwprnlnksthtrptntllyntscrtstrlkcrtnrlprmtrs
:END:
** TODO [#D] need checks that url don't contain stupid shit like trailing colons etc
:PROPERTIES:
:CREATED:  [2019-02-24]
:ID:       ndchcksthtrldntcntnstpdshtlktrlngclnstc
:END:
** TODO [#C] hmm could use this api for checking normalization?      :cannon:
:PROPERTIES:
:CREATED:  [2021-03-21]
:ID:       hmmcldsthspfrchckngnrmlztn
:END:
: http get 'http://archive.org/wayback/available?url=https://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories'
: {
:     "archived_snapshots": {
:         "closest": {
:             "available": true,
:             "status": "200",
:             "timestamp": "20210219235548",
:             "url": "http://web.archive.org/web/20210219235548/https://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories"
:         }
:     },
:     "url": "https://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories"
: }
* [#C] * testcases
:PROPERTIES:
:ID:       tstcss
:END:
Some tricky cases which would be nice to get right

** [#B] [2020-11-15] [[https://www.youtube.com/c/Wendoverproductions/videos][Wendover Productions - YouTube]]
:PROPERTIES:
:ID:       swwwytbcmcwndvrprdctnsvdswndvrprdctnsytb
:END:
** [#B] [2020-04-19] roam links
:PROPERTIES:
:ID:       rmlnks
:END:
** [#B] [2021-02-07] https://app.element.io/#/room/#blockchain:fosdem.org :cannon:
:PROPERTIES:
:ID:       spplmntrmblckchnfsdmrg
:END:
** [#B] [2021-02-16] [[https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3745973][A Relational Turn for Data Protection? by Neil M. Richards, Woodrow Hartzog :: SSRN]] :cannon:
:PROPERTIES:
:ID:       spprsssrncmslpprscfmbstrcnbynlmrchrdswdrwhrtzgssrn
:END:
abstract_id
** STRT [#B] [2019-06-23] A Brief Intro to Topological Quantum Field Theories. - YouTube https://www.youtube.com/watch?v=59uLGIrkMxM&list=WL&index=61&t=0s
:PROPERTIES:
:ID:       brfntrttplgclqntmfldthrsybcmwtchvlgrkmxmlstwlndxts
:END:
eh, rules might be a bit complicated. E.g. if both v and list are present, we wanna ditch list, otherwise keep list
** TODO [#B] [2020-11-16] [[https://twitter.com/amogh_jalihal/status/1328393853599059970][normalise DOI]]
:PROPERTIES:
:ID:       stwttrcmmghjlhlsttsnrmlsd
:END:
: Ah sure: This DOI: https://doi.org/10.1073/pnas.1211902109  should lead to this paper: https://pnas.org/content/109/48/E3324 .
** TODO [#C] m.wikipedia normalisation could also be useful for hypothesis? :hypothesis:
:PROPERTIES:
:CREATED:  [2019-07-23]
:ID:       mwkpdnrmlstncldlsbsflfrhypthss
:END:
*** [2019-07-23] X.m.wikipedia.org
:PROPERTIES:
:ID:       xmwkpdrg
:END:
*** [2019-07-23] mm, it's got canonical though..
:PROPERTIES:
:ID:       mmtsgtcnnclthgh
:END:
*** TODO [2019-07-23] perhaps promnesia should respond both to canonical and its own idea of normalised (preferring canonical)
:PROPERTIES:
:ID:       prhpsprmnsshldrspndbthtcndtswndfnrmlsdprfrrngcnncl
:END:
** STRT [#C] [2019-04-20] fragments: Aharonov-Bohm Experiment https://physicstravelguide.com/experiments/aharonov-bohm#tab__concrete
:PROPERTIES:
:ID:       frgmntshrnvbhmxprmntsphysgdcmxprmntshrnvbhmtbcncrt
:END:
url normalising... this is an example where fragments are important
*** [2019-08-26] here I guess it could yield url with hash + parent url?
:PROPERTIES:
:ID:       hrgsstcldyldrlwthhshprntrl
:END:
*** TODO [2019-08-26] always assume that parents in uri hierarchy are actual parents? I guess that's fairly reasonable
:PROPERTIES:
:ID:       lwysssmthtprntsnrhrrchyrctlprntsgssthtsfrlyrsnbl
:END:
** [#C] [2019-08-25] stuff like this:  youtu.be/1TKSfAkWWN0
:PROPERTIES:
:ID:       stfflkthsytbtksfkwwn
:END:
*** [2019-08-25] this is also motivation for canonifying. this is a redirect link in tweet, and there is no way to associate it with canonical
:PROPERTIES:
:ID:       thsslsmtvtnfrcnnfyngthssrwtndthrsnwytsscttwthcnncl
:END:
** [#C] [2020-05-02] https://hubs.mozilla.com/#/                     :cannon:
:PROPERTIES:
:ID:       shbsmzllcm
:END:
** [#C] [2020-04-30] [[http://www.defmacro.org/2016/12/22/writing-well.html][Writing well | defmacro]]
:PROPERTIES:
:ID:       wwwdfmcrrgwrtngwllhtmlwrtngwlldfmcr
:END:
support for archive.org and test on this page
*** [#C] [2020-05-28] Wayback Machine https://web.archive.org/web/2019*/http://www.defmacro.org/2016/12/22/writing-well.html
:PROPERTIES:
:ID:       wybckmchnswbrchvrgwbwwwdfmcrrgwrtngwllhtml
:END:
** [#C] [2019-11-15] maybe https://youtu.be/zRxI0DaQrag?t=1380 ?
:PROPERTIES:
:ID:       mybsytbzrxdqrgt
:END:
** [#C] [2019-11-09] github: https://twitter.com/i/web/status/928602151286386688 this end up trimmed with ... :(
:PROPERTIES:
:ID:       gthbstwttrcmwbsttsthsndptrmmdwth
:END:
** [#C] [2019-11-07] github: https://twitter.com/i/web/status/1156086851633131520
:PROPERTIES:
:ID:       gthbstwttrcmwbstts
:END:
** [#C] [2021-01-24] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=941827 :cannon:
:PROPERTIES:
:ID:       sbgsdbnrgcgbnbgrprtcgbg
:END:
:  https://wiki.debian.org/SecureBoot#MOK_-_Machine_Owner_Keycanonical: wiki.debian.org/SecureBootsources : notes[[https://wiki.debian.org/SecureBoot][SecureBoot - Debian Wiki]]
** [#C] [2021-02-28] https://undeadly.org/cgi?action=article;sid=20170930133438 :cannon:
:PROPERTIES:
:ID:       snddlyrgcgctnrtclsd
:END:
'sid' matters here
** TODO [#C] hmm, server doesn't normalise properly?? (url escaping)
:PROPERTIES:
:CREATED:  [2019-06-02]
:ID:       hmmsrvrdsntnrmlsprprlyrlscpng
:END:
: ru.wikipedia.org/wiki/Грамматикализация
** TODO [#C] semiconductors video should be unified properly. well, or again hierarchical thing? might be too spammy for 'watch later'
:PROPERTIES:
:CREATED:  [2019-07-15]
:ID:       smcndctrsvdshldbnfdprprlylthngmghtbtspmmyfrwtchltr
:END:
** [#C] [2019-12-23] https://cstheory.stackexchange.com/questions/1920/examples-of-unrelated-mathematics-playing-a-fundamental-role-in-tcs/1925#1925: need parent link to trigger on this in cannon
:PROPERTIES:
:ID:       scsthrystckxchngcmqstnsxmsndprntlnkttrggrnthsncnnn
:END:
** [#C] [2020-06-16] https://news.ycombinator.com/item?id=23537243#23540421 hmm, both id and # ?
:PROPERTIES:
:ID:       snwsycmbntrcmtmdhmmbthdnd
:END:
** [#C] [2020-02-08] https://bugzilla.mozilla.org/show_bug.cgi?id=1411873 : ugh need to keep id
:PROPERTIES:
:ID:       sbgzllmzllrgshwbgcgdghndtkpd
:END:
** TODO [#C] [2020-01-12] old.reddit and new reddit
:PROPERTIES:
:ID:       ldrddtndnwrddt
:END:
** [#D] [2019-06-02] handle google.com/search
:PROPERTIES:
:ID:       hndlgglcmsrch
:END:
** [#D] [2020-11-30] https://www.c-span.org/video/?c4808083/rust-language-chosen the ? is sneaky
:PROPERTIES:
:ID:       swwwcspnrgvdcrstlnggchsnthssnky
:END:
** [#D] [2020-11-22] https://melpa.org/#/async # is just redundant?
:PROPERTIES:
:ID:       smlprgsyncsjstrdndnt
:END:
** [#D] [2019-08-25] Lisp Language http://wiki.c2.com/?LispLanguage ? is sneaky
:PROPERTIES:
:ID:       lsplnggwkccmlsplnggssnky
:END:
** [#D] better regex for url extraction
:PROPERTIES:
:ID:       bttrrgxfrrlxtrctn
:END:
eh, urls can have commas...  e.g. http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html
so, for csv need a separate extractor.
** [#D] [2020-11-18] [[https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3603021][Vanquishing ‘Monsters’ in Foundations of Computer Science: Euclid, Dedekind, Frege, Russell, Gödel, Wittgenstein, Church, Turing, and Jaśkowski didn’t get them all … by Carl Hewitt :: SSRN]]
:PROPERTIES:
:ID:       spprsssrncmslpprscfmbstrckddntgtthmllbycrlhwttssrn
:END:
** STRT [#D] should be more defensive
:PROPERTIES:
:CREATED:  [2019-06-05]
:ID:       shldbmrdfnsv
:END:
:  ValueError: netloc ' +79869929087, mak34@gmail.com' contains invalid characters under NFKC normalization
*** [2019-08-26] did I do it?** [2020-12-09] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=955208 'bug' parameter
:PROPERTIES:
:ID:       dddtsbgsdbnrgcgbnbgrprtcgbgbgprmtr
:END:
** [2020-12-04] https://unix.stackexchange.com/questions/117609/capture-error-of-ls-to-file#comment183614_117609
:PROPERTIES:
:ID:       snxstckxchngcmqstnscptrrrrflstflcmmnt
:END:
** DONE [#B] [2019-02-18] make sure ? extracted correctly https://play.google.com/store/apps/details?id=com.faultexception.reader
:PROPERTIES:
:ID:       mksrxtrctdcrrctlysplygglcmstrppsdtlsdcmfltxcptnrdr
:END:
** DONE [#C] [2019-05-04] https://news.ycombinator.com/item?id=12973788
:PROPERTIES:
:ID:       snwsycmbntrcmtmd
:END:
id here is important

** [2021-03-15] wiki.c2.com pages don't even have canonical?         :cannon:
:PROPERTIES:
:ID:       wkccmpgsdntvnhvcnncl
:END:
* [#D] * misc
:PROPERTIES:
:ID:       msc
:END:
** STRT [#B] would be convenient to normalise reddit annotations so annotations from all comments would be collected
:PROPERTIES:
:CREATED:  [2019-05-06]
:ID:       wldbcnvnnttnrmlsrddtnnttnttnsfrmllcmmntswldbcllctd
:END:
** TODO [#C] [2019-09-03] potential pypi project? https://pypi.org/project/cannon
:PROPERTIES:
:ID:       ptntlpypprjctspyprgprjctcnnn
:END:
** TODO [#C] hypothesis: wonder how it works on timestamped archive.org stuff?
:PROPERTIES:
:CREATED:  [2019-11-01]
:ID:       hypthsswndrhwtwrksntmstmpdrchvrgstff
:END:
** TODO [#C] hmm some local and remote pages may overlap
:PROPERTIES:
:CREATED:  [2019-07-13]
:ID:       hmmsmlclndrmtpgsmyvrlp
:END:
e.g. this is very likely to be mapped to normal py docss
file:/usr/share/doc/python3/html/library/contextlib.html

** [#C] [2020-05-11] [[https://medium.com/@WorldBrain/vision-mission-values-2020-update-d70aa35a638#0b0b][Vision, Mission & Values — 2020 Update - WorldBrain.io - Medium]]
:PROPERTIES:
:ID:       smdmcmwrldbrnvsnmssnvlspdbbvsnmssnvlspdtwrldbrnmdm
:END:
fragments are often random and useless
even default org-mode is guilty
** [#C] [2019-07-09] Changed how threading works. by JakeHartnell · Pull Request 952 · hypothesis/h https://github.com/hypothesis/h/pull/952 :hypothesis:reddit:
:PROPERTIES:
:ID:       chngdhwthrdngwrksbyjkhrtnypthsshsgthbcmhypthsshpll
:END:
** TODO [#C] reddit: tested on https://www.reddit.com/r/explainlikeimfive/comments/1vavyq/eli5_godels_ontological_proof/ceqlupx/ :hypothesis:
:PROPERTIES:
:CREATED:  [2019-07-09]
:ID:       rddttstdnswwwrddtcmrxplnltsvvyqlgdlsntlgclprfcqlpx
:END:
huh, so reddit seems to normalise to the main page, and displays annotations as 'orphaned' for comment views?
*** [2019-07-09] so look like reddit referes to the 'post' page as canonical. Right.
:PROPERTIES:
:ID:       slklkrddtrfrstthpstpgscnnclrght
:END:
* --------------------------------------------------
:PROPERTIES:
:END:
* [#C] [2021-03-26] [[https://wiki.archiveteam.org/index.php?title=URLTeam][URLTeam - Archiveteam]] :cannon:
:PROPERTIES:
:ID:       swkrchvtmrgndxphpttlrltmrltmrchvtm
:END:
* [#C] [2021-03-25] [[https://github.com/seomoz/url-py][seomoz/url-py: URL Transformation, Sanitization]] :cannon:
:PROPERTIES:
:ID:       sgthbcmsmzrlpysmzrlpyrltrnsfrmtnsntztn
:END:
* [#C] [2021-03-03] [[https://twitter.com/jondotbo][(5) Jon Borichevskiy (@jondotbo) / Twitter]] :promnesia:cannon:
:PROPERTIES:
:ID:       stwttrcmjndtbjnbrchvskyjndtbtwttr
:END:
hmm how to resolve twitter renames?...
* TODO [#B] [2021-05-05] [[https://news.ycombinator.com/item?id=27047243#27047697][ClearURLs – automatically remove tracking elements from URLs | Hacker News]] :cannon:
:PROPERTIES:
:ID:       snwsycmbntrcmtmdclrrlstmtvtrcknglmntsfrmrlshckrnws
:END:
: Related, if you're looking to clean urls on the backend, here's my current pattern:
: 
: startswith: 'utm_', 'ga_', 'hmb_', 'ic_', 'fb_', 'pd_rd', 'ref_', 'share_', 'client_', 'service_'
: 
: or has: '$/ref@amazon.', '.tsrc', 'ICID', '_xtd', '_encoding@amazon.', '_hsenc', '_openstat', 'ab', 'action_object_map', 'action_ref_map', 'action_type_map', 'amp', 'arc404', 'affil', 'affiliate', 'app_id', 'awc', 'bfsplash', 'bftwuk', 'campaign', 'camp', 'cip', 'cmp', 'CMP', 'cmpid', 'curator', 'cvid@bing.com', 'efg', 'ei@google.', 'fbclid', 'fbplay', 'feature@youtube.com', 'feedName', 'feedType', 'form@bing.com', 'forYou', 'fsrc', 'ftcamp', 'ga_campaign', 'ga_content', 'ga_medium', 'ga_place', 'ga_source', 'ga_term', 'gi', 'gclid@youtube.com', 'gs_l', 'gws_rd@google.', 'igshid', 'instanceId', 'instanceid', 'kw@youtube.com', 'maca', 'mbid', 'mkt_tok', 'mod', 'ncid', 'ocid', 'offer', 'origin', 'partner','pq@bing.com', 'print', 'printable', 'psc@amazon.', 'qs@bing.com', 'rebelltitem', 'ref', 'referer', 'referrer', 'rss', 'ru', 'sc@bing.com', 'scrolla', 'sei@google.', 'sh', 'share', 'sk@bing.com', 'source', 'sp@bing.com', 'sref', 'srnd', 'supported_service_name', 'tag', 'taid', 'time_continue', 'tsrc', 'twsrc', 'twcamp', 'twclid', 'tweetembed', 'twterm', 'twgr', 'utm', 'ved@google.', 'via', 'xid', 'yclid', 'yptr' 
